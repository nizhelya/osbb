{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": null,
        "designer|userClassName": "AppVodomer"
    },
    "designerId": "5a18111a-0258-4a74-8f9c-62602aa40963",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "FmVodomer",
                "selector": "#fmVodomer"
            },
            "name": "FmVodomer",
            "designerId": "56561d91-0abf-4970-9b9f-50ab4c7899f5"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": null,
                "ref": "WinAddVodomer",
                "selector": "#winAddVodomer",
                "xtype": null
            },
            "name": "WinAddVodomer",
            "designerId": "51cbc8f7-c24a-4260-85e3-82645b9033c1"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "PnAppVodomer",
                "selector": "#pnAppVodomer"
            },
            "name": "PnAppVodomer",
            "designerId": "d67769d5-0c41-4e8b-9f22-c7307cc0bdf1"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "GrAllPokVodomera",
                "selector": "#grAllPokVodomera"
            },
            "name": "GrAllPokVodomera",
            "designerId": "a349c1fc-a87d-4968-bec8-d19d22038810"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#delTekPokVod",
                "designer|targetType": "Ext.button.Button",
                "fn": "onDelTekPokVodClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");//QueryVodomer.getResults  <AllPokVodomera>",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    what:'AVodomer'",
                    "",
                    "};",
                    "//GRID",
                    "",
                    "//var grTekNachAppVodomer = Ext.getCmp('grTekNachAppVodomer');",
                    "",
                    "//FORMA",
                    "var delBtn = Ext.getCmp('delTekPokVod');",
                    "var vklDelPokEn = Ext.getCmp('vklDelPokVod');",
                    "",
                    "delBtn.setDisabled(true);",
                    "vklDelPokEn.setValue(0);",
                    "",
                    "var fmVodomer = Ext.getCmp('fmVodomer');",
                    "var value = fmVodomer.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "Ext.MessageBox.confirm({",
                    "    title: 'Удаление последних показаний счетчика воды',",
                    "    msg: 'Вы удаляете последнее показание по счетчику <br>тип воды <b>'+value.type+",
                    "    '</b> <br>Место установки <b>'+value.place+'</b><br>Показание<b>'+value.tek+",
                    "    '</b><br>Подтвердите или отмените свои действия.',",
                    "    buttons: Ext.MessageBox.OKCANCEL,",
                    "    icon: Ext.MessageBox.ERROR,",
                    "    buttonText:{",
                    "        ok:'подтвеждаю',",
                    "        cancel:'отмена'",
                    "    },",
                    "    fn:function(btn,newValue){",
                    "        if(btn=='ok'){",
                    "            QueryVodomer.delPokVodomera(value,function(results){",
                    "                if (results.success){",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний ',",
                    "                                         msg: results.msg,",
                    "                                         buttons: Ext.MessageBox.OK,",
                    "                                         icon: Ext.MessageBox.INFO",
                    "                                        });",
                    "                    fmVodomer.getForm().findField('newValue').setValue(0);",
                    "                    stWater.load({",
                    "                        params: {",
                    "                            what:'AllPokVodomera',",
                    "                            what_id: value.address_id,",
                    "                            address_id: value.address_id,",
                    "                            vodomer_id: value.vodomer_id,",
                    "                            login:value.login,",
                    "                            password:value.password",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "",
                    "                    stTekPokVodomera.load({",
                    "                        params: {",
                    "                            what:'TekPokVodomera',",
                    "                            what_id: value.address_id,",
                    "                            address_id: value.address_id,",
                    "                            vodomer_id: value.vodomer_id,",
                    "                            login:value.login,",
                    "                            password:value.password",
                    "                        },",
                    "                        callback: function(records,operation,success){",
                    "                            if(success){",
                    "                                fmVodomer.getForm().loadRecord(records[0]);",
                    "                            }",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "",
                    "                }else{",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний счетчика воды',",
                    "                                         msg: results.msg,",
                    "                                         buttons: Ext.MessageBox.OK,",
                    "                                         icon: Ext.MessageBox.ERROR",
                    "                                        });",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDelTekPokVodClick",
            "designerId": "f3b89a61-63d0-49cf-ade3-f102382d0daf"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokVod",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokVodClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");//QueryVodomer.getResults  <AppVodomer>",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    what:'AVodomer'",
                    "",
                    "};",
                    "//GRID",
                    "",
                    "//var grTekNachAppVodomer = Ext.getCmp('grTekNachAppVodomer');",
                    "",
                    "//FORMA",
                    "",
                    "var fmVodomer = Ext.getCmp('fmVodomer');",
                    "var value = fmVodomer.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.newValue;",
                    "var max =newValue - value.tek;",
                    "",
                    "if (isNaN(newValue)){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Введите число',",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.ERROR",
                    "    });",
                    "    return false;",
                    "}else if (max < 0){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Текущие показания <b>'+value.tek+'</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',",
                    "        buttons: Ext.MessageBox.CANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmVodomer.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }",
                    "        }",
                    "    });",
                    "} else if(max === 0) {",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Вводимые показания теже что и предыдущие<br>Подтвердите или отмените вводимые показания.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'подтвеждаю',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmVodomer.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }else{",
                    "                QueryVodomer.newPokVodomera(value,function(results){",
                    "                    if (results.success){",
                    "",
                    "                        fmVodomer.getForm().findField('newValue').setValue(0);",
                    "                        stWater.load({",
                    "                            params: {",
                    "                                what:'AllPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        stTekPokVodomera.load({",
                    "                            params: {",
                    "                                what:'TekPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            callback: function(records,operation,success){",
                    "                                if(success){",
                    "                                    fmVodomer.getForm().loadRecord(records[0]);",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "} else if(max > 20) {",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +'</b> куб(a)<br>Подтвердите или отмените вводимые показания.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'подтвеждаю',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmVodomer.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }else{",
                    "                QueryVodomer.newPokVodomera(value,function(results){",
                    "                    if (results.success){",
                    "",
                    "                        fmVodomer.getForm().findField('newValue').setValue(0);",
                    "                        stWater.load({",
                    "                            params: {",
                    "                                what:'AllPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        stTekPokVodomera.load({",
                    "                            params: {",
                    "                                what:'TekPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            callback: function(records,operation,success){",
                    "                                if(success){",
                    "                                    fmVodomer.getForm().loadRecord(records[0]);",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "",
                    "} else {",
                    "    QueryVodomer.newPokVodomera(value,function(results){",
                    "        if (results.success){",
                    "",
                    "            fmVodomer.getForm().findField('newValue').setValue(0);",
                    "            stWater.load({",
                    "                params: {",
                    "                    what:'AllPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "            stTekPokVodomera.load({",
                    "                params: {",
                    "                    what:'TekPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                callback: function(records,operation,success){",
                    "                    if(success){",
                    "                        fmVodomer.getForm().loadRecord(records[0]);",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "        }",
                    "    });",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokVodClick",
            "designerId": "53526ce7-10c4-4dd0-966a-f856a373b815"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAppVodomer",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrAppVodomerSelectionChange",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");//QueryVodomer.getResults  <AllPokVodomera>",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var house_id = values.get('house_id');",
                    "",
                    "//GRID",
                    "",
                    "var grAppHVodomer = Ext.getCmp('grAppHVodomer');",
                    "",
                    "//FORMA",
                    "",
                    "var fmVodomer = Ext.getCmp('fmVodomer');",
                    "",
                    "//var fs = fmVodomer.down('#fsInsPokVodMiddle');",
                    "//var btnHand = fmVodomer.down('#insHandPokVod');",
                    "var btnNorm = fmVodomer.down('#insTekPokVod');",
                    "var tekValue = fmVodomer.getForm().findField('tekp');",
                    "var newValue = fmVodomer.getForm().findField('newValue');",
                    "",
                    "var AddMeedlePokVod = fmVodomer.down('#AddMeedlePokVod');",
                    "var insMeedlePokVod = fmVodomer.down('#insMeedlePokVod');",
                    "var date_st = fmVodomer.getForm().findField('date_st');",
                    "var date_fin = fmVodomer.getForm().findField('date_fin');",
                    "var date_ao = fmVodomer.getForm().findField('date_ao');",
                    "var date_ar = fmVodomer.getForm().findField('date_ar');",
                    "var pok_ot = fmVodomer.getForm().findField('pok_ot');",
                    "var pok_do = fmVodomer.getForm().findField('pok_do');",
                    "var rday = fmVodomer.getForm().findField('rday');",
                    "var mday = fmVodomer.getForm().findField('mday');",
                    "var kub_day = fmVodomer.getForm().findField('kub_day');",
                    "var qty_kub = fmVodomer.getForm().findField('qty_kub');",
                    "",
                    "var newKubov = fmVodomer.getForm().findField('newKubov');",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "grAppHVodomer.getView().getSelectionModel().deselectAll();",
                    "",
                    "if (selected.length){",
                    "    stWater.load({",
                    "        params: {",
                    "            login:login,",
                    "            password:password,",
                    "            address_id: address_id,",
                    "            what:'AllPokVodomera',",
                    "            what_id: selected[0].data.address_id,",
                    "            vodomer_id: selected[0].data.vodomer_id",
                    "        },",
                    "        scope:this",
                    "    });",
                    "    fmVodomer.down('#delTekPokVod').setDisabled(true);",
                    "    fmVodomer.getForm().findField('vkl_del').setValue(0);",
                    "    stTekPokVodomera.load({",
                    "        params: {",
                    "            login:login,",
                    "            password:password,",
                    "            address_id: address_id,",
                    "            what:'TekPokVodomera',",
                    "            what_id: selected[0].data.address_id,",
                    "            vodomer_id: selected[0].data.vodomer_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                fmVodomer.getForm().loadRecord(records[0]);",
                    "",
                    "            }",
                    "        },",
                    "        scope:this",
                    "    });",
                    "    if (selected[0].data.out===1){",
                    "        AddMeedlePokVod.setDisabled(true);",
                    "        insMeedlePokVod.setDisabled(true);",
                    "        date_ao.setDisabled(false);",
                    "        date_ar.setDisabled(false);",
                    "        date_st.setDisabled(true);",
                    "        date_fin.setDisabled(true);",
                    "        qty_kub.setDisabled(true);",
                    "        pok_do.setDisabled(true);",
                    "        pok_ot.setDisabled(true);",
                    "        rday.setDisabled(true);",
                    "        mday.setDisabled(true);",
                    "        qty_kub.setDisabled(true);",
                    "        kub_day.setDisabled(true);",
                    "        newKubov.setDisabled(true);",
                    "        btnNorm.setDisabled(true);",
                    "        newValue.setDisabled(true);",
                    "",
                    "    } else {",
                    "        AddMeedlePokVod.setDisabled(true);",
                    "        insMeedlePokVod.setDisabled(true);",
                    "        date_ao.setDisabled(true);",
                    "        date_ar.setDisabled(true);",
                    "        date_st.setDisabled(true);",
                    "        date_fin.setDisabled(true);",
                    "        pok_do.setDisabled(true);",
                    "        pok_ot.setDisabled(true);",
                    "        mday.setDisabled(true);",
                    "        rday.setDisabled(true);",
                    "        qty_kub.setDisabled(true);",
                    "        kub_day.setDisabled(true);",
                    "        newKubov.setDisabled(true);",
                    "        btnNorm.setDisabled(false);",
                    "        newValue.setDisabled(false);",
                    "    }",
                    "}",
                    ""
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrAppVodomerSelectionChange",
            "designerId": "ea8a9dfa-cf2e-4fe0-9794-f41f168b95dd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAppHVodomer",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrHVodomerSelectionChange",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");//QueryVodomer.getResults  <AllPokVodomera>",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var house_id = values.get('house_id');",
                    "",
                    "//GRID",
                    "",
                    "var grAppVodomer = Ext.getCmp('grAppVodomer');",
                    "",
                    "//FORMA",
                    "",
                    "var fmVodomer = Ext.getCmp('fmVodomer');",
                    "",
                    "//LOGIKA",
                    "",
                    "grAppVodomer.getView().getSelectionModel().deselectAll();",
                    "",
                    "if (selected.length){",
                    "    stTekPokVodomera.removeAll();",
                    "",
                    "    stWater.load({",
                    "        params: {",
                    "            login:login,",
                    "            password:password,",
                    "            address_id: address_id,",
                    "            what:'AllPokVodomera',",
                    "            what_id: selected[0].data.address_id,  ",
                    "            vodomer_id: selected[0].data.vodomer_id",
                    "        },",
                    "        scope:this",
                    "    });",
                    "    fmVodomer.getForm().reset();",
                    "",
                    "}",
                    ""
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrHVodomerSelectionChange",
            "designerId": "c7a0c5ae-c9b6-43b3-8024-271117aeb8cf"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAllPokVodomera",
                "designer|params": [
                    "model",
                    "selected",
                    "eOpts"
                ],
                "designer|targetType": "MyGridPanel21",
                "fn": "onGrAllPokVodomeraSelectionChange",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");//QueryVodomer.getResults  <AllPokVodomera>",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "var grAppVodomer = Ext.getCmp('grAppVodomer');",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var house_id = values.get('house_id');",
                    "",
                    "//GRID",
                    "",
                    "",
                    "//FORMA",
                    "",
                    "var fmVodomer = Ext.getCmp('fmVodomer');",
                    "",
                    "//var fs = fmVodomer.down('#fsInsPokVodMiddle');",
                    "//var btnHand = fmVodomer.down('#insHandPokVod');",
                    "var btnNorm = fmVodomer.down('#insTekPokVod');",
                    "var tekValue = fmVodomer.getForm().findField('tekp');",
                    "var newValue = fmVodomer.getForm().findField('newValue');",
                    "",
                    "var AddMeedlePokVod = fmVodomer.down('#AddMeedlePokVod');",
                    "var insMeedlePokVod = fmVodomer.down('#insMeedlePokVod');",
                    "var date_st = fmVodomer.getForm().findField('date_st');",
                    "var date_fin = fmVodomer.getForm().findField('date_fin');",
                    "var date_ao = fmVodomer.getForm().findField('date_ao');",
                    "var date_ar = fmVodomer.getForm().findField('date_ar');",
                    "var pok_ot = fmVodomer.getForm().findField('pok_ot');",
                    "var pok_do = fmVodomer.getForm().findField('pok_do');",
                    "var rday = fmVodomer.getForm().findField('rday');",
                    "var mday = fmVodomer.getForm().findField('mday');",
                    "var kub_day = fmVodomer.getForm().findField('kub_day');",
                    "var qty_kub = fmVodomer.getForm().findField('qty_kub');",
                    "",
                    "var newKubov = fmVodomer.getForm().findField('newKubov');",
                    "",
                    "grAppVodomer.getView().getSelectionModel().deselectAll();",
                    "",
                    "//LOGIKA",
                    "",
                    "",
                    "if (selected.length){",
                    "",
                    "    stTekPokVodomera.load({",
                    "        params: {",
                    "            login:login,",
                    "            password:password,",
                    "            address_id: address_id,",
                    "            what:'TekPokWater',",
                    "            what_id: selected[0].data.address_id,",
                    "            pok_id: selected[0].data.pok_id,",
                    "            vodomer_id: selected[0].data.vodomer_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                fmVodomer.getForm().loadRecord(records[0]);",
                    "",
                    "            }",
                    "        },",
                    "        scope:this",
                    "    });",
                    "    if (selected[0].data.pok_ot!==0){",
                    "        AddMeedlePokVod.setDisabled(true);",
                    "        insMeedlePokVod.setDisabled(true);",
                    "        date_ao.setDisabled(false);",
                    "        date_ar.setDisabled(false);",
                    "        date_st.setDisabled(false);",
                    "        date_fin.setDisabled(false);",
                    "        qty_kub.setDisabled(false);",
                    "        pok_do.setDisabled(false);",
                    "        pok_ot.setDisabled(false);",
                    "        rday.setDisabled(false);",
                    "        mday.setDisabled(false);",
                    "        qty_kub.setDisabled(false);",
                    "        kub_day.setDisabled(false);",
                    "        newKubov.setDisabled(true);",
                    "        btnNorm.setDisabled(true);",
                    "        newValue.setDisabled(true);",
                    "",
                    "    } else {",
                    "        AddMeedlePokVod.setDisabled(true);",
                    "        insMeedlePokVod.setDisabled(true);",
                    "        date_ao.setDisabled(true);",
                    "        date_ar.setDisabled(true);",
                    "        date_st.setDisabled(true);",
                    "        date_fin.setDisabled(true);",
                    "        pok_do.setDisabled(true);",
                    "        pok_ot.setDisabled(true);",
                    "        mday.setDisabled(true);",
                    "        rday.setDisabled(true);",
                    "        qty_kub.setDisabled(true);",
                    "        kub_day.setDisabled(true);",
                    "        newKubov.setDisabled(true);",
                    "        btnNorm.setDisabled(true);",
                    "        newValue.setDisabled(true);",
                    "    }",
                    "}",
                    ""
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrAllPokVodomeraSelectionChange",
            "designerId": "46893b0b-6b4a-43f0-8b1f-9ac72f24f59b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#addAppVodomer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onAddAppVodomerClick",
                "implHandler": [
                    "//in use",
                    "var me=this;",
                    "/*",
                    "COMPONENT",
                    "*/",
                    "var winAddVodomer = Ext.ClassManager.instantiateByAlias('widget.winaddvodomer');",
                    "/*",
                    "LOGIKA",
                    "*/",
                    "var dt = new Date();",
                    "",
                    "var form = winAddVodomer.down('#fmAddVodomer');",
                    "var check = form.down('#chkExistentVod');",
                    "var obrVodomer = form.down('#obrVodomer');",
                    "var jointVodomer = form.down('#jointVodomer');",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "//LOGIKA'",
                    "values.set({'vibor':'addAppVodomer'});",
                    "stUser.sync();",
                    "form.down('#btAddVodomer').setText('Добавить прибор учета');",
                    "form.getForm().findField('pdate').setValue(Ext.Date.format(dt, 'Y-m-d'));",
                    "form.getForm().findField('sdate').setValue(Ext.Date.format(dt, 'Y-m-d'));",
                    "form.getForm().findField('new_address_id').setValue(values.get('address_id'));",
                    "",
                    "form.getForm().findField('address_id').hide();",
                    "form.getForm().findField('new_address_id').hide();",
                    "",
                    "winAddVodomer.setTitle('Добовление прибора учета');",
                    "winAddVodomer.show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onAddAppVodomerClick",
            "designerId": "e1818cce-35de-47bb-b964-7c9439c5fed1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddVodomer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddAppVodomerClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "this.getWinAddVodomer().close();",
                    "switch (vibor){",
                    "    case 'addAppVodomer':  // ВЫБРАНА КВАРТИРА",
                    "        me.addVodomerApp(value);",
                    "        break;",
                    "    case 'editAppVodomer':  // ВЫБРАНА КВАРТИРА",
                    "        me.editVodomerApp(value);",
                    "        break;",
                    "    case 'changeAppVodomer':  // ВЫБРАНА КВАРТИРА",
                    "        me.changeVodomerApp(value);",
                    "        break;",
                    "",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddAppVodomerClick",
            "designerId": "4153e44b-8b09-4662-b1b7-a0c33a29b6a5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppVodomer",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppVodomerActivate",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "//var showAddressAppVodomer = Ext.getCmp('showAddressAppVodomer');",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var address = values.get('address');",
                    "var house_id = values.get('house_id');",
                    "var prixod_id = values.get('prixod_id');",
                    "",
                    "var fmVodomer = Ext.getCmp('fmVodomer');",
                    "var grAllPokVodomera = Ext.getCmp('grAllPokVodomera');",
                    "",
                    "",
                    "//STORE",
                    "var stVodomer = Ext.data.StoreManager.get(\"StVodomer\");//QueryVodomer.getResults  <AppVodomer>",
                    "var stHVodomer = Ext.data.StoreManager.get(\"StHVodomer\");//QueryVodomer.getResults <AppHVodomer>",
                    "var StWater = Ext.data.StoreManager.get(\"StWater\");//QueryTeplomer.getResults <AppHTeplomer>",
                    "StWater.removeAll();",
                    "",
                    "//grAllPokVodomera.getView().refresh();",
                    "",
                    "//showAddressAppVodomer.setText(address).show();",
                    "fmVodomer.getForm().reset();",
                    "stVodomer.load({",
                    "    params: {",
                    "        what:'AppVodomer',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "stHVodomer.load({",
                    "    params: {",
                    "        what:'AppHVodomer',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "    scope:this",
                    "});  ",
                    "",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabAppVodomerActivate",
            "designerId": "db0a0cac-ac33-425b-a0f4-b305701c22ab"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addVodomerApp",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stVodomer = Ext.data.StoreManager.get(\"StVodomer\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addAppVodomer\"",
                    "};",
                    "",
                    "//GRID",
                    "var grAppVodomer = Ext.getCmp('grAppVodomer');",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryVodomer.addVodomer(value,function(results){",
                    "    if (results.success){",
                    "        stVodomer.load({",
                    "            params: {",
                    "                what:'AppVodomer',",
                    "                address_id: value.address_id,",
                    "                vodomer_id: value.vodomer_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grAppVodomer.getView().getSelectionModel().select(0);",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Добавление cчетчика воды',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    }",
                    "});"
                ]
            },
            "name": "addVodomerApp",
            "designerId": "a5f9886a-ccd3-4a06-9c55-802d814c842a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newValue",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onNumberfieldSpecialkey",
                "implHandler": [
                    "var value = field.getValue();",
                    "if (e.getKey() === e.ENTER && !Ext.isEmpty(value)) {",
                    "    this.onInsTekPokVodClick();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "name": "onNumberfieldSpecialkey",
            "designerId": "86771602-c061-4d51-938b-be8b35c60b98"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editVodomerApp",
                "implHandler": [
                    "// in use",
                    "//var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stVodomer = Ext.data.StoreManager.get(\"StVodomer\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    house_id:values.get('house_id'),",
                    "    rowind:values.get('rowind'),",
                    "    what:\"editAppVodomer\"",
                    "};",
                    "",
                    "//GRID",
                    "var grAppVodomer = Ext.getCmp('grAppVodomer');",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryVodomer.addVodomer(value,function(results){",
                    "",
                    "    if (results.success){",
                    "        stVodomer.load({",
                    "            params: {",
                    "                what:'AppVodomer',",
                    "                address_id: value.address_id,",
                    "                vodomer_id: value.vodomer_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grAppVodomer.getView().getSelectionModel().select(value.rowind);",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Обновление прибора учета',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    }",
                    "});"
                ]
            },
            "name": "editVodomerApp",
            "designerId": "7c76256c-6a43-4219-ab43-e2954d993934"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "changeVodomerApp",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stVodomer = Ext.data.StoreManager.get(\"StVodomer\");",
                    "var stHVodomer = Ext.data.StoreManager.get(\"StHVodomer\");//QueryVodomer.getResults <AppHVodomer>",
                    "var stVodomerKassa = Ext.data.StoreManager.get(\"StVodomerKassa\");//QueryVodomer.getResults  <AppVodomer>",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");//QueryVodomer.getResults  <AllPokVodomera>",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    house_id:values.get('house_id'),",
                    "    what:\"changeAppVodomer\"",
                    "};",
                    "",
                    "var fmPribor = Ext.getCmp('fmVodomer');",
                    "",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryVodomer.addVodomer(value,function(results){",
                    "    if (results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Замена cчетчика воды',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        stVodomerKassa.load({",
                    "            params: {",
                    "                what:'AppVodomerKassa',",
                    "                address_id: value.address_id,",
                    "                what_id: value.address_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        fmPribor.getForm().reset();",
                    "",
                    "        stVodomer.load({",
                    "            params: {",
                    "                what:'AppVodomer',",
                    "                address_id: value.address_id,",
                    "                vodomer_id: value.vodomer_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        stWater.removeAll();",
                    "",
                    "        stHVodomer.load({",
                    "            params: {",
                    "                what:'AppHVodomer',",
                    "                address_id: value.address_id,",
                    "                what_id: value.address_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    }else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Замена cчетчика воды',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "changeVodomerApp",
            "designerId": "a36fcc18-14e1-418c-9028-fee85fc02ed5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insHandPokVod",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsHandPokVodClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");//QueryVodomer.getResults  <AppVodomer>",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    what:'insHandApp'",
                    "",
                    "};",
                    "//GRID",
                    "",
                    "",
                    "//FORMA",
                    "",
                    "var fmVodomer = Ext.getCmp('fmVodomer');",
                    "var value = fmVodomer.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.newKubov;",
                    "var max = newValue;",
                    "if(max > 20) {",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +'</b> куб(a)<br>Подтвердите или отмените вводимые показания.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'подтвеждаю',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmVodomer.getForm().findField('newKubov').focus();",
                    "                return false; ",
                    "            }else{",
                    "                QueryVodomer.newPokVodomera(value,function(results){",
                    "                    if (results.success){ ",
                    "                        fmVodomer.getForm().findField('newKubov').setValue(0);",
                    "                        stWater.load({",
                    "                            params: {",
                    "                                what:'AllPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            scope:this",
                    "                        });  ",
                    "                        stTekPokVodomera.load({",
                    "                            params: {",
                    "                                what:'TekPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            callback: function(records,operation,success){",
                    "                                if(success){",
                    "                                    fmVodomer.getForm().loadRecord(records[0]);",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "",
                    "} else {",
                    "    QueryVodomer.newPokVodomera(value,function(results){",
                    "        if (results.success){ ",
                    "",
                    "            fmVodomer.getForm().findField('newKubov').setValue(0);",
                    "            stWater.load({",
                    "                params: {",
                    "                    what:'AllPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                scope:this",
                    "            });  ",
                    "",
                    "            stTekPokVodomera.load({",
                    "                params: {",
                    "                    what:'TekPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                callback: function(records,operation,success){",
                    "                    if(success){",
                    "                        fmVodomer.getForm().loadRecord(records[0]);",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "        }",
                    "    });",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsHandPokVodClick",
            "designerId": "951d0030-a6be-4ef7-b8f6-264c45f1d9cc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#aktOplombirovki",
                "designer|targetType": "Ext.button.Button",
                "fn": "onAktOplombirovkiClick",
                "implHandler": [
                    "var me = this;",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StReport = Ext.data.StoreManager.get(\"StReport\");",
                    "var values =StUser.getAt(0);",
                    "var addr = values.data.address_id;",
                    "",
                    "var usertype = 1;",
                    "",
                    "//V",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();",
                    "var grid = Ext.getCmp('grAppVodomer');",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "var size = Ext.Object.getSize(gridRowSelectedRecords) ;",
                    "var vodomer =[];",
                    "if (size >= 1){",
                    "",
                    "    Ext.Object.each(gridRowSelectedRecords, function(key, val, myself) {",
                    "        Ext.Object.merge(val.data, vodomer);",
                    "        vodomer.push(val.data.vodomer_id);",
                    "    });",
                    "",
                    "}",
                    "",
                    "//console.log(vodomer);",
                    "if (addr) {",
                    "",
                    "    var report = 'AktOplombirovkiVodomer';",
                    "    var namereport = 'Акт опламбировки.';",
                    "",
                    "    var value = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        report:report,",
                    "        what:report,",
                    "        address_id: addr,",
                    "        vodomer: vodomer",
                    "    };",
                    "",
                    "    var tab = tabPnCenter.child('#'+report);",
                    "",
                    "    if (!tab) {",
                    "        tab  = tabPnCenter.add({",
                    "            xtype:'tabreportorg',",
                    "            title:namereport,",
                    "            id:''+report+''",
                    "        });",
                    "",
                    "        tabPnCenter.setActiveTab(tab);",
                    "",
                    "    }else{",
                    "",
                    "        tabPnCenter.setActiveTab(tab);",
                    "    }",
                    "",
                    "    var reppan = tab.getComponent(0);",
                    "",
                    "",
                    "    var myMask= Ext.Msg.show({",
                    "        title:'Отчеты...',",
                    "        msg: 'Загрузка отчета.Ожидайте...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "",
                    "    QueryReport.getResults(value,function(data){",
                    "        if (data){",
                    "",
                    "            //    reportHead.update(data.head);",
                    "            reppan.update(data.content);",
                    "            //      reportFoot.update(data.foot);",
                    "            Ext.REPORTCONTENT =data.content;",
                    "            myMask.close();",
                    "",
                    "",
                    "        } else {",
                    "            Ext.MessageBox.show({",
                    "                title: 'Ошибка ',",
                    "                msg: 'Документ не создан',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "",
                    "            });",
                    "",
                    "        }",
                    "",
                    "    });",
                    "    myMask.close();",
                    "",
                    "",
                    "}",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onAktOplombirovkiClick",
            "designerId": "99c0af5f-de4b-4e7a-8912-01be5957f3df"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#aktRasplombirovki",
                "designer|targetType": "Ext.button.Button",
                "fn": "onAktRasplombirovkiClick",
                "implHandler": [
                    "var me = this;",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StReport = Ext.data.StoreManager.get(\"StReport\");",
                    "var values =StUser.getAt(0);",
                    "var addr = values.data.address_id;",
                    "",
                    "var usertype = 1;",
                    "",
                    "//V",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();",
                    "var grid = Ext.getCmp('grAppVodomer');",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "var size = Ext.Object.getSize(gridRowSelectedRecords) ;",
                    "var vodomer =[];",
                    "if (size >= 1){",
                    "",
                    "    Ext.Object.each(gridRowSelectedRecords, function(key, val, myself) {",
                    "        Ext.Object.merge(val.data, vodomer);",
                    "        vodomer.push(val.data.vodomer_id);",
                    "    });",
                    "",
                    "}",
                    "",
                    "//console.log(vodomer);",
                    "if (addr) {",
                    "",
                    "    var report = 'AktRasplombirovkiVodomer';",
                    "    var namereport = 'Акт распломбировки.';",
                    "",
                    "    var value = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        report:report,",
                    "        what:report,",
                    "        address_id: addr,",
                    "        vodomer: vodomer",
                    "    };",
                    "",
                    "    var tab = tabPnCenter.child('#'+report);",
                    "",
                    "    if (!tab) {",
                    "        tab  = tabPnCenter.add({",
                    "            xtype:'tabreportorg',",
                    "            title:namereport,",
                    "            id:''+report+''",
                    "        });",
                    "",
                    "        tabPnCenter.setActiveTab(tab);",
                    "",
                    "    }else{",
                    "",
                    "        tabPnCenter.setActiveTab(tab);",
                    "    }",
                    "",
                    "    var reppan = tab.getComponent(0);",
                    "",
                    "",
                    "    var myMask= Ext.Msg.show({",
                    "        title:'Отчеты...',",
                    "        msg: 'Загрузка отчета.Ожидайте...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "",
                    "    QueryReport.getResults(value,function(data){",
                    "        if (data){",
                    "",
                    "            //    reportHead.update(data.head);",
                    "            reppan.update(data.content);",
                    "            //      reportFoot.update(data.foot);",
                    "            Ext.REPORTCONTENT =data.content;",
                    "            myMask.close();",
                    "",
                    "",
                    "        } else {",
                    "            Ext.MessageBox.show({",
                    "                title: 'Ошибка ',",
                    "                msg: 'Документ не создан',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "",
                    "            });",
                    "",
                    "        }",
                    "",
                    "    });",
                    "    myMask.close();",
                    "",
                    "",
                    "}",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onAktRasplombirovkiClick",
            "designerId": "6933f6de-ef04-4880-b135-7d6658061bee"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insMeedlePokVod",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton43",
                "fn": "onInsMeedlePokVodClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");//QueryVodomer.getResults  <AppVodomer>",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    what:'insMeedlePokVod'",
                    "",
                    "};",
                    "//GRID",
                    "",
                    "",
                    "//FORMA",
                    "",
                    "var fmVodomer = Ext.getCmp('fmVodomer');",
                    "var value = fmVodomer.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.newKubov;",
                    "var max = newValue;",
                    "if(max > 20) {",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +'</b> куб(a)<br>Подтвердите или отмените вводимые показания.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'подтвеждаю',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmVodomer.getForm().findField('newKubov').focus();",
                    "                return false;",
                    "            }else{",
                    "                QueryVodomer.newPokVodomera(value,function(results){",
                    "                    if (results.success){",
                    "                        fmVodomer.getForm().findField('newKubov').setValue(0);",
                    "                        stWater.load({",
                    "                            params: {",
                    "                                what:'AllPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        stTekPokVodomera.load({",
                    "                            params: {",
                    "                                what:'TekPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            callback: function(records,operation,success){",
                    "                                if(success){",
                    "                                    fmVodomer.getForm().loadRecord(records[0]);",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "",
                    "} else {",
                    "    QueryVodomer.newPokVodomera(value,function(results){",
                    "        if (results.success){",
                    "",
                    "            fmVodomer.getForm().findField('newKubov').setValue(0);",
                    "            stWater.load({",
                    "                params: {",
                    "                    what:'AllPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "            stTekPokVodomera.load({",
                    "                params: {",
                    "                    what:'TekPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                callback: function(records,operation,success){",
                    "                    if(success){",
                    "                        fmVodomer.getForm().loadRecord(records[0]);",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "        }",
                    "    });",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsMeedlePokVodClick",
            "designerId": "e2fe4e07-a486-4de7-bcac-372111f56e63"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#AddMeedlePokVod",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton78",
                "fn": "onAddMeedlePokVodClick",
                "implHandler": [
                    "// in use",
                    "//var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//LOGIN & PASSWORD",
                    "var fmVodomer = Ext.getCmp('fmVodomer');",
                    "var vodomer_id = fmVodomer.getForm().findField('vodomer_id');",
                    "var insMeedlePokVod = fmVodomer.down('#insMeedlePokVod');",
                    "var date_st = fmVodomer.getForm().findField('date_st');",
                    "var date_fin = fmVodomer.getForm().findField('date_fin');",
                    "var mday = fmVodomer.getForm().findField('mday');",
                    "var pok_ot = fmVodomer.getForm().findField('pok_ot');",
                    "var pok_do = fmVodomer.getForm().findField('pok_do');",
                    "var rday = fmVodomer.getForm().findField('rday');",
                    "var kub_day = fmVodomer.getForm().findField('kub_day');",
                    "var newKubov = fmVodomer.getForm().findField('newKubov');",
                    "var qty_kub = fmVodomer.getForm().findField('qty_kub');",
                    "",
                    "var value = fmVodomer.getValues();",
                    "",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"AddMeedlePokVod\"",
                    "};",
                    "Ext.Object.merge(value, params);",
                    "QueryVodomer.updateVodomer(value,function(results){",
                    "    if (results.success){",
                    "",
                    "        insMeedlePokVod.setDisabled(false);",
                    "        date_st.setDisabled(false);",
                    "        date_fin.setDisabled(false);",
                    "        pok_do.setDisabled(false);",
                    "        pok_ot.setDisabled(false);",
                    "        mday.setDisabled(false);",
                    "        rday.setDisabled(false);",
                    "        kub_day.setDisabled(false);",
                    "        newKubov.setDisabled(false);",
                    "        qty_kub.setDisabled(false);",
                    "",
                    "        insMeedlePokVod.setDisabled(false);",
                    "        date_st.setValue(results.date_st);",
                    "        date_fin.setValue(results.date_fin);",
                    "        pok_ot.setValue(results.pok_ot);",
                    "        pok_do.setValue(results.pok_do);",
                    "        rday.setValue(results.rday);",
                    "        kub_day.setValue(results.kub_day);",
                    "        mday.setValue(results.mday);",
                    "        qty_kub.setValue(results.qty_kub);",
                    "        newKubov.setValue(results.kubov);",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Обновление cчетчика воды',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    }",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onAddMeedlePokVodClick",
            "designerId": "23253836-cc6a-410d-8262-08f02c408c75"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabVoda",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabVodaActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmVoda');",
                    "var btAddNach = Ext.getCmp('btAddNachVoda');",
                    "var grid = Ext.getCmp('grTarifHousesVoda');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "form.getForm().reset();",
                    "form.getForm().findField('data_nach').setValue(firstDay);",
                    "btAddNach.setText(\"Начислить воду за период   \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabVodaActivate",
            "designerId": "bed75a72-e0be-4b2c-b13c-9d0429e48d33"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesVoda",
                "designer|params": [
                    "model",
                    "selected",
                    "eOpts"
                ],
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesVodaSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmVoda');",
                    "var btAddPerer = Ext.getCmp('btAddPererVoda');",
                    "var viborTarif = Ext.getCmp('cbTarifVoda');",
                    "var btAddNach = Ext.getCmp('btAddNachVoda');",
                    "var btAddNachVodaPrev = Ext.getCmp('btAddNachVodaPrev');",
                    "var btnInsTarif = Ext.getCmp('btnInsTarifVoda');",
                    "var tarif = Ext.getCmp('tarVoda');",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected,index);",
                    "if (selected.length > 0) {",
                    "    form.getForm().loadRecord(selected[0]);",
                    "",
                    "    if (Ext.Date.format(Ext.Date.getFirstDateOfMonth(selected[0].data.data), 'Y-m-d') ==",
                    "        Ext.Date.format(Ext.Date.getFirstDateOfMonth(form.getForm().findField('data_nach').getValue()), 'Y-m-d')) {",
                    "        btAddNach.setDisabled(false);",
                    "        btAddNachVodaPrev.setDisabled(false);",
                    "        btAddPerer.setDisabled(true);",
                    "        btnInsTarif.setDisabled(false);",
                    "        form.getForm().findField('sdata').setValue(\"0\");",
                    "        form.getForm().findField('fdata').setValue(\"0\");",
                    "        form.getForm().findField('info').setValue(\"\");",
                    "        form.getForm().findField('address_ot').clearValue();",
                    "        form.getForm().findField('address_do').clearValue();",
                    "        form.getForm().findField('allkv').setValue(1);",
                    "        viborTarif.clearValue();",
                    "        viborTarif.setDisabled(false);",
                    "",
                    "",
                    "",
                    "    }else{",
                    "        btAddNach.setDisabled(true);",
                    "        btAddNachVodaPrev.setDisabled(true);",
                    "        btAddPerer.setDisabled(false);",
                    "        form.getForm().findField('sdata').setValue(Ext.Date.format(Ext.Date.getFirstDateOfMonth(selected[0].data.data), 'Y-m-d'));",
                    "        form.getForm().findField('fdata').setValue(Ext.Date.format( Ext.Date.getLastDateOfMonth(selected[0].data.data), 'Y-m-d'));",
                    "        form.getForm().findField('address_ot').clearValue();",
                    "        form.getForm().findField('address_do').clearValue();",
                    "        form.getForm().findField('allkv').setValue(1);",
                    "        btnInsTarif.setDisabled(false);",
                    "        viborTarif.clearValue();",
                    "        viborTarif.setDisabled(false);",
                    "    }",
                    "    tarif.setValue(0);",
                    "",
                    "",
                    "    stAddress.removeAll();",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            house_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this",
                    "    });",
                    "",
                    "}",
                    ""
                ],
                "name": "selectionchange"
            },
            "name": "onGrTarifHousesVodaSelectionChange",
            "designerId": "cc8440bf-1c33-4958-a867-1333611f9783"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddNachVoda",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddNachVodaClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var grid =  Ext.getCmp('grTarifHousesVoda');",
                    "",
                    "var getRowSelection = grid.getSelectionModel().getSelection()[0];",
                    "var house_id = getRowSelection.get('house_id');",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"nachislenie_voda_now\",",
                    "    house_id:house_id",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление...',",
                    "    msg: 'Начисление услуги.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление услуги',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление услуги',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click"
            },
            "name": "onBtAddNachVodaClick",
            "designerId": "aa59977c-3dbe-4ffa-92af-5532f4e9a41e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddPererVoda",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddPererVodaClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "",
                    "",
                    "//LOGIKA",
                    "var grid = Ext.getCmp('grTarifHousesVoda');",
                    "//var store = grid.getStore();",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "var size = Ext.Object.getSize(gridRowSelectedRecords) ;",
                    "var values =stUser.getAt(0);",
                    "var params =[];",
                    "if (size > 1){",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_voda_stoki\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:0,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "} else {",
                    "",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_voda_stoki\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:value.tarif_manual,",
                    "        xv:value.xv,",
                    "        ch_xv:value.ch_xv,",
                    "        st:value.st,",
                    "        ch_st:value.ch_st,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "}",
                    "var house = \"\";",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Перерасчет по воде',",
                    "    msg: 'Выполнение перерасчета.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "Ext.Object.each(gridRowSelectedRecords, function(key, val, myself) {",
                    "    Ext.Object.merge(val.data, params);",
                    "",
                    "    QueryAddress.updateRecords(val.data,function(results){",
                    "        // console.log(results);",
                    "",
                    "        if(results.success===\"1\"){",
                    "            myMask.close();",
                    "",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет по воде',",
                    "                msg: \"Перерасчет по воде и стокам выполнен\",",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.INFO",
                    "            });",
                    "        }  else {",
                    "            house =val.data.house;",
                    "            myMask.close();",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет по воде ',",
                    "                msg: \"Перерасчет не выполнен по дому \"+ house ,",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "",
                    "        }",
                    "    });",
                    "});",
                    ""
                ],
                "name": "click"
            },
            "name": "onBtAddPererVodaClick",
            "designerId": "7dd40371-0d6a-4da4-9cd7-a78cf35eb747"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddNachVodaPrev",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddNachVodaPrevClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var grid =  Ext.getCmp('grTarifHousesVoda');",
                    "",
                    "var getRowSelection = grid.getSelectionModel().getSelection()[0];",
                    "var house_id = getRowSelection.get('house_id');",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"nachislenie_voda_prev\",",
                    "    house_id:house_id",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление...',",
                    "    msg: 'Начисление услуги.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление услуги',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление услуги',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click"
            },
            "name": "onBtAddNachVodaPrevClick",
            "designerId": "e7f4f0f3-c1c8-417e-8d36-96926a11a8b6"
        }
    ]
}