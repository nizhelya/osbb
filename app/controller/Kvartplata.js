/*
 * File: app/controller/Kvartplata.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Osbb.controller.Kvartplata', {
    extend: 'Ext.app.Controller',

    control: {
        "#tabKvartplata": {
            activate: 'onTabKvartplataActivate'
        },
        "#grTarifHousesKv": {
            selectionchange: 'onGrTarifHousesKvSelectionChange'
        }
    },

    onTabKvartplataActivate: function(component, eOpts) {
          var form = Ext.getCmp('fmKvartplata');
                var btAddNach = Ext.getCmp('btAddNachKv');
                var grid = Ext.getCmp('grTarifHousesKv');
                var store = grid.getStore();
        //console.log(store.data);
                store.removeAll();
                var dt = new Date();
                var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;
                form.getForm().reset();
                form.getForm().findField('data_nach').setValue(firstDay);
                btAddNach.setText("Начислить квартплату за период   "+ Ext.Date.format(firstDay, 'F,Y'));

    },

    onGrTarifHousesKvSelectionChange: function(model, selected, eOpts) {
        //STORE

        var stAddress = Ext.data.StoreManager.get('StAddressOrg');
        var form = Ext.getCmp('fmKvartplata');
        var btAddPerer = Ext.getCmp('btAddPererKv');
        var btAddPererNachKv = Ext.getCmp('btAddPererNachKv');
        var btAddNachKvPrev = Ext.getCmp('btAddNachKvPrev');

        var viborTarif = Ext.getCmp('cbTarifKv');
        var btAddNach = Ext.getCmp('btAddNachKv');
        var btAddNachRemont = Ext.getCmp('btAddNachRemont');

        var btAddNachDop = Ext.getCmp('btAddNachDop');

        var btnInsTarif = Ext.getCmp('btnInsTarifKv');
        var tarif = Ext.getCmp('tarKv');

        var dt = new Date();
        var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        //console.log(selected);
        if (selected.length > 0) {
            form.getForm().loadRecord(selected[0]);

            form.getForm().findField('sdata').setValue(Ext.Date.format(Ext.Date.getFirstDateOfMonth(selected[0].data.data), 'Y-m-d'));
            form.getForm().findField('fdata').setValue(Ext.Date.format( Ext.Date.getLastDateOfMonth(selected[0].data.data), 'Y-m-d'));
            form.getForm().findField('address_ot').clearValue();
            form.getForm().findField('address_do').clearValue();
            form.getForm().findField('allkv').setValue(1);
            form.getForm().findField('tarif_manual').setValue(0);
            form.getForm().findField('ch_kv').setValue(form.getForm().findField('kv').getValue());
            form.getForm().findField('ch_kvf1').setValue(form.getForm().findField('kvf1').getValue());
            viborTarif.clearValue();
            viborTarif.setDisabled(false);
            if (Ext.Date.format(Ext.Date.getFirstDateOfMonth(selected[0].data.data), 'Y-m-d') ==
                Ext.Date.format(Ext.Date.getFirstDateOfMonth(form.getForm().findField('data_nach').getValue()), 'Y-m-d')) {
                btAddNach.setDisabled(false);
                btAddNachRemont.setDisabled(false);
                btAddNachDop.setDisabled(false);
                btAddNachKvPrev.setDisabled(false);


                btAddPerer.setDisabled(true);
                btAddPererNachKv.setDisabled(false);
                btnInsTarif.setDisabled(false);



            }else{
                btAddNach.setDisabled(true);
                btAddNachRemont.setDisabled(true);
                btAddNachDop.setDisabled(true);
                btAddNachKvPrev.setDisabled(true);

                btAddPerer.setDisabled(false);
                btAddPererNachKv.setDisabled(true);
                viborTarif.setDisabled(true);
                btnInsTarif.setDisabled(true);
            }
            tarif.setValue(0);


            stAddress.removeAll();
            stAddress.load({
                params: {
                    what:'AddressFromHousesTarif',
                    house_id: selected[0].data.house_id
                },
                callback: function(records,operation,success){
                    if(success){
                        form.getForm().findField('address_ot').setValue(records[0].get('address_id'));
                        form.getForm().findField('address_do').setValue(records[0].get('address_id'));
                    }

                },
                scope:this
            });

        }

    }

});
