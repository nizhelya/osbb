/*
 * File: app/controller/AppGas.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Osbb.controller.AppGas', {
    extend: 'Ext.app.Controller',

    refs: {
        WinAddGasomer: '#winAddGasomer'
    },

    control: {
        "#aktOplombirovkiGasomer": {
            click: 'onAktOplombirovkiGasomerClick'
        },
        "#insMeedlePokGasomera": {
            click: 'onInsMeedlePokGasomeraClick'
        },
        "#AddMeedlePokGasomera": {
            click: 'onAddMeedlePokGasomeraClick'
        },
        "#btAddGasomer": {
            click: 'onBtAddGasomerClick'
        },
        "#tabAppGasomer": {
            activate: 'onTabAppGasomerActivate'
        },
        "#addAppGasomer": {
            click: 'onAddAppGasomerClick'
        },
        "#grAppGasomer": {
            selectionchange: 'onGrAppGasomerSelectionChange'
        },
        "#grAppHGasomer": {
            selectionchange: 'onGrAppHGasomerSelectionChange'
        },
        "#grAllPokGasomer": {
            selectionchange: 'onGrAllPokGasomerSelectionChange'
        },
        "#delTekPokGasomera": {
            click: 'onDelTekPokGasomeraClick'
        }
    },

    onAktOplombirovkiGasomerClick: function(button, e, eOpts) {

    },

    onInsMeedlePokGasomeraClick: function(button, e, eOpts) {

    },

    onAddMeedlePokGasomeraClick: function(button, e, eOpts) {
        // in use
        //var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        //LOGIN & PASSWORD
        var fmVodomer = Ext.getCmp('fmGasomer');
        var vodomer_id = fmVodomer.getForm().findField('gasomer_id');
        var insMeedlePokVod = fmVodomer.down('#insMeedlePokGasomera');
        var date_st = fmVodomer.getForm().findField('date_st');
        var date_fin = fmVodomer.getForm().findField('date_fin');
        var mday = fmVodomer.getForm().findField('mday');
        var pok_ot = fmVodomer.getForm().findField('pok_ot');
        var pok_do = fmVodomer.getForm().findField('pok_do');
        var rday = fmVodomer.getForm().findField('rday');
        var kub_day = fmVodomer.getForm().findField('kub_day');
        var newKubov = fmVodomer.getForm().findField('newKubov');
        var qty_kub = fmVodomer.getForm().findField('qty_kub');

        var value = fmVodomer.getValues();


        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            address:values.get('address'),
            what:"AddMeedlePokGasomera"
        };
        Ext.Object.merge(value, params);
        QueryGasomer.updateGasomer(value,function(results){
            if (results.success){

                insMeedlePokVod.setDisabled(false);
                date_st.setDisabled(false);
                date_fin.setDisabled(false);
                pok_do.setDisabled(false);
                pok_ot.setDisabled(false);
                mday.setDisabled(false);
                rday.setDisabled(false);
                kub_day.setDisabled(false);
                newKubov.setDisabled(false);
                qty_kub.setDisabled(false);

                insMeedlePokVod.setDisabled(false);
                date_st.setValue(results.date_st);
                date_fin.setValue(results.date_fin);
                pok_ot.setValue(results.pok_ot);
                pok_do.setValue(results.pok_do);
                rday.setValue(results.rday);
                kub_day.setValue(results.kub_day);
                mday.setValue(results.mday);
                qty_kub.setValue(results.qty_kub);
                newKubov.setValue(results.kubov);
            } else {
                Ext.MessageBox.show({
                    title: 'Ввод по среднему прибора учета',
                    msg: results.msg,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
            }
        });

    },

    onBtAddGasomerClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //CONTROLLER

        var value = button.findParentByType('form').getValues();
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var vibor = values.get('vibor');
        this.getWinAddGasomer().close();
        switch (vibor){

            case 'addAppGasomer':  // ВЫБРАНА КВАРТИРА
                me.addGasomerApp(value);
                break;
            case 'editAppGasomer':  // ВЫБРАНА КВАРТИРА
                me.editGasomerApp(value);
                break;
            case 'changeAppGasomer':  // ВЫБРАНА КВАРТИРА
                me.changeGasomerApp(value);
                break;

        }
    },

    onTabAppGasomerActivate: function(component, eOpts) {
        //in use
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var address = values.get('address');
        var house_id = values.get('house_id');
        var prixod_id = values.get('prixod_id');

        var fmGasomer = Ext.getCmp('fmGasomer');


        //STORE
        var StGasomer = Ext.data.StoreManager.get("StGasomer");//QueryVodomer.getResults  <AppVodomer>
        var StHGasomer = Ext.data.StoreManager.get("StHGasomer");//QueryVodomer.getResults <AppHVodomer>
        var StPGasomer = Ext.data.StoreManager.get("StPGasomer");//QueryVodomer.getResults  <AppVodomer>

        StPGasomer.removeAll();

        //grAllPokVodomera.getView().refresh();

        //showAddressAppVodomer.setText(address).show();
        fmGasomer.getForm().reset();
        StGasomer.load({
            params: {
                what:'AppGasomer',
                what_id: address_id,
                address_id: address_id,
                login:login,
                password:password
            },
            scope:this
        });

        StHGasomer.load({
            params: {
                what:'AppHGasomer',
                what_id: address_id,
                address_id: address_id,
                login:login,
                password:password
            },
            scope:this
        });

    },

    onAddAppGasomerClick: function(button, e, eOpts) {
        //in use
        var me=this;
        /*
        COMPONENT
        */
        var winAddGasomer = Ext.ClassManager.instantiateByAlias('widget.winaddgasomer');
        /*
        LOGIKA
        */
        var dt = new Date();

        var form = winAddGasomer.down('#fmAddGasomer');
        var check = form.down('#chkExistentGasomer');
        var jointVodomer = form.down('#jointGasomer');
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        //console.log(form);
        values.set({'vibor':'addAppGasomer'});
        stUser.sync();
        form.down('#btAddGasomer').setText('Добавить прибор');
        form.getForm().findField('pdate').setValue(Ext.Date.format(dt, 'Y-m-d'));
        form.getForm().findField('sdate').setValue(Ext.Date.format(dt, 'Y-m-d'));
        form.getForm().findField('new_address_id').setValue(values.get('address_id'));

        form.getForm().findField('address_id').hide();
        form.getForm().findField('new_address_id').hide();
        winAddGasomer.setTitle('Добовление прибора учета');
        winAddGasomer.show();
    },

    onGrAppGasomerSelectionChange: function(model, selected, eOpts) {
        //in use
        var me =this;

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StPPribora = Ext.data.StoreManager.get("StPGasomer");//QueryVodomer.getResults  <AllPokVodomera>
        var StTekPokPribora = Ext.data.StoreManager.get("StTekPokGasomera");//QueryVodomer.getResults <TekPokVodomera>

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var house_id = values.get('house_id');

        //GRID

        var grAppHGasomer = Ext.getCmp('grAppHGasomer');

        //FORMA

        var fmPribor = Ext.getCmp('fmGasomer');

        //var fs = fmVodomer.down('#fsInsPokVodMiddle');
        //var btnHand = fmVodomer.down('#insHandPokVod');
        var btnNorm = fmPribor.down('#insTekPokGasomera');
        var tekValue = fmPribor.getForm().findField('tekp');
        var newValue = fmPribor.getForm().findField('newValue');

        var AddMeedlePokVod = fmPribor.down('#AddMeedlePokGasomera');
        var insMeedlePokVod = fmPribor.down('#insMeedlePokGasomera');
        var date_st = fmPribor.getForm().findField('date_st');
        var date_fin = fmPribor.getForm().findField('date_fin');
        var date_ao = fmPribor.getForm().findField('date_ao');
        var date_ar = fmPribor.getForm().findField('date_ar');
        var pok_ot = fmPribor.getForm().findField('pok_ot');
        var pok_do = fmPribor.getForm().findField('pok_do');
        var rday = fmPribor.getForm().findField('rday');
        var mday = fmPribor.getForm().findField('mday');
        var kub_day = fmPribor.getForm().findField('kub_day');
        var qty_kub = fmPribor.getForm().findField('qty_kub');

        var newKubov = fmPribor.getForm().findField('newKubov');


        //LOGIKA

        grAppHGasomer.getView().getSelectionModel().deselectAll();

        if (selected.length){
            StPPribora.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'AllPokGasomera',
                    what_id: selected[0].data.address_id,
                    gasomer_id: selected[0].data.gasomer_id
                },
                scope:this
            });
            fmPribor.down('#delTekPokGasomera').setDisabled(true);
            fmPribor.getForm().findField('vkl_del').setValue(0);
            StTekPokPribora.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'TekPokGasomera',
                    what_id: selected[0].data.address_id,
                    gasomer_id: selected[0].data.gasomer_id
                },
                callback: function(records,operation,success){
                    if(success){
                        fmPribor.getForm().loadRecord(records[0]);

                    }
                },
                scope:this
            });
            if (selected[0].data.out===1){
                AddMeedlePokVod.setDisabled(true);
                insMeedlePokVod.setDisabled(true);
                date_ao.setDisabled(false);
                date_ar.setDisabled(false);
                date_st.setDisabled(true);
                date_fin.setDisabled(true);
                qty_kub.setDisabled(true);
                pok_do.setDisabled(true);
                pok_ot.setDisabled(true);
                rday.setDisabled(true);
                mday.setDisabled(true);
                qty_kub.setDisabled(true);
                kub_day.setDisabled(true);
                newKubov.setDisabled(true);
                btnNorm.setDisabled(true);
                newValue.setDisabled(true);

            } else {
                AddMeedlePokVod.setDisabled(true);
                insMeedlePokVod.setDisabled(true);
                date_ao.setDisabled(true);
                date_ar.setDisabled(true);
                date_st.setDisabled(true);
                date_fin.setDisabled(true);
                pok_do.setDisabled(true);
                pok_ot.setDisabled(true);
                mday.setDisabled(true);
                rday.setDisabled(true);
                qty_kub.setDisabled(true);
                kub_day.setDisabled(true);
                newKubov.setDisabled(true);
                btnNorm.setDisabled(false);
                newValue.setDisabled(false);
            }
        }

    },

    onGrAppHGasomerSelectionChange: function(model, selected, eOpts) {
        //in use
        var me =this;

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stPPribor = Ext.data.StoreManager.get("StPGasomer");//QueryVodomer.getResults  <AllPokVodomera>
        var stTekPokPribora = Ext.data.StoreManager.get("StTekPokGasomera");//QueryVodomer.getResults <TekPokVodomera>

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var house_id = values.get('house_id');

        //GRID

        var grAppPribor = Ext.getCmp('grAppGasomer');

        //FORMA

        var fmPribor = Ext.getCmp('fmGasomer');

        //LOGIKA

        grAppPribor.getView().getSelectionModel().deselectAll();

        if (selected.length){
            stTekPokPribora.removeAll();

            stPPribor.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'AllPokGasomera',
                    what_id: selected[0].data.address_id,
                    gasomer_id: selected[0].data.gasomer_id
                },
                scope:this
            });
            fmPribor.getForm().reset();

        }

    },

    onGrAllPokGasomerSelectionChange: function(model, selected, eOpts) {
        //in use
        var me =this;

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekPokPribora = Ext.data.StoreManager.get("StTekPokGasomera");//QueryVodomer.getResults <TekPokVodomera>

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var house_id = values.get('house_id');

        //GRID


        //FORMA

        var fmVodomer = Ext.getCmp('fmGasomer');
        var grAppPribor = Ext.getCmp('grAppEnergomer');


        var btnNorm = fmVodomer.down('#insTekPokGasomera');
        var tekValue = fmVodomer.getForm().findField('tekp');
        var newValue = fmVodomer.getForm().findField('newValue');

        var AddMeedlePokVod = fmVodomer.down('#AddMeedlePokGasomer');
        var insMeedlePokVod = fmVodomer.down('#insMeedlePokGasomera');
        var date_st = fmVodomer.getForm().findField('date_st');
        var date_fin = fmVodomer.getForm().findField('date_fin');
        var date_ao = fmVodomer.getForm().findField('date_ao');
        var date_ar = fmVodomer.getForm().findField('date_ar');
        var pok_ot = fmVodomer.getForm().findField('pok_ot');
        var pok_do = fmVodomer.getForm().findField('pok_do');
        var rday = fmVodomer.getForm().findField('rday');
        var mday = fmVodomer.getForm().findField('mday');
        var kub_day = fmVodomer.getForm().findField('kub_day');
        var qty_kub = fmVodomer.getForm().findField('qty_kub');

        var newKubov = fmVodomer.getForm().findField('newKubov');

        grAppPribor.getView().getSelectionModel().deselectAll();

        //LOGIKA


        if (selected.length){

            stTekPokPribora.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'TekPokGasomera',
                    what_id: selected[0].data.address_id,
                    pok_id: selected[0].data.pok_id,
                    gasomer_id: selected[0].data.gasomer_id
                },
                callback: function(records,operation,success){
                    if(success){
                        fmVodomer.getForm().loadRecord(records[0]);

                    }
                },
                scope:this
            });
            if (selected[0].data.pok_ot!==0){
                AddMeedlePokVod.setDisabled(true);
                insMeedlePokVod.setDisabled(true);
                date_ao.setDisabled(false);
                date_ar.setDisabled(false);
                date_st.setDisabled(false);
                date_fin.setDisabled(false);
                qty_kub.setDisabled(false);
                pok_do.setDisabled(false);
                pok_ot.setDisabled(false);
                rday.setDisabled(false);
                mday.setDisabled(false);
                qty_kub.setDisabled(false);
                kub_day.setDisabled(false);
                newKubov.setDisabled(true);
                btnNorm.setDisabled(true);
                newValue.setDisabled(true);

            } else {
                AddMeedlePokVod.setDisabled(true);
                insMeedlePokVod.setDisabled(true);
                date_ao.setDisabled(true);
                date_ar.setDisabled(true);
                date_st.setDisabled(true);
                date_fin.setDisabled(true);
                pok_do.setDisabled(true);
                pok_ot.setDisabled(true);
                mday.setDisabled(true);
                rday.setDisabled(true);
                qty_kub.setDisabled(true);
                kub_day.setDisabled(true);
                newKubov.setDisabled(true);
                btnNorm.setDisabled(true);
                newValue.setDisabled(true);
            }
        }

    },

    onDelTekPokGasomeraClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StPPribora = Ext.data.StoreManager.get("StPGasomer");//QueryVodomer.getResults  <AllPokVodomera>
        var StTekPokPribora = Ext.data.StoreManager.get("StTekPokGasomera");//QueryVodomer.getResults <TekPokVodomera>



        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            house_id:values.get('house_id'),
            what:'AGassomer'

        };
        //GRID

        //var grTekNachAppVodomer = Ext.getCmp('grTekNachAppVodomer');

        //FORMA

        var delBtn = Ext.getCmp('delTekPokGasomer');
        var vklDelPokEn = Ext.getCmp('vklDelPokGas');

        delBtn.setDisabled(true);
        vklDelPokEn.setValue(0);



        var fmPribor = Ext.getCmp('fmGasomer');
        var value = fmPribor.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);
        //console.log(value);
        Ext.MessageBox.confirm({
            title: 'Удаление последних показаний счетчика',
            msg: 'Вы удаляете последнее показание по счетчику <br>Показание<b>'+value.tek+'</b><br>Подтвердите или отмените свои действия.',
            buttons: Ext.MessageBox.OKCANCEL,
            icon: Ext.MessageBox.ERROR,
            buttonText:{
                ok:'подтвеждаю',
                cancel:'отмена'
            },
            fn:function(btn,newValue){
                if(btn=='ok'){
                    QueryGasomer.delPokGasomera(value,function(results){
                        if (results.success){
                            Ext.MessageBox.show({title: 'Удаление последних показаний ',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                            fmPribor.getForm().findField('newValue').setValue(0);
                            StPPribora.load({
                                params: {
                                    what:'AllPokGasomera',
                                    what_id: value.address_id,
                                    address_id: value.address_id,
                                    gasomer_id: value.gasomer_id,
                                    login:value.login,
                                    password:value.password
                                },
                                scope:this
                            });

                            StTekPokPribora.load({
                                params: {
                                    what:'TekPokGasomera',
                                    what_id: value.address_id,
                                    address_id: value.address_id,
                                    gasomer_id: value.gasomer_id,
                                    login:value.login,
                                    password:value.password
                                },
                                callback: function(records,operation,success){
                                    if(success){
                                        fmPribor.getForm().loadRecord(records[0]);
                                    }
                                },
                                scope:this
                            });

                        }else{
                            Ext.MessageBox.show({title: 'Удаление последних показаний счетчика',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                        }
                    });
                }
            }
        });

    },

    addGasomerApp: function(value) {
        // in use
        var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StGasomer = Ext.data.StoreManager.get("StGasomer");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            house_id:values.get('house_id'),
            address:values.get('address'),
            what:"addAppGasomer"
        };

        //GRID
        var grAppGasomer= Ext.getCmp('grAppGasomer');
        //LOGIKA

        Ext.Object.merge(value, params);
        QueryGasomer.addGasomer(value,function(results){
            if (results.success){
                StGasomer.load({
                    params: {
                        what:'AppGasomer',
                        address_id: value.address_id,
                        gasomer_id: value.gasomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            grAppGasomer.getView().getSelectionModel().select(0);
                            Ext.MessageBox.show({
                                title: 'Добавление прибора учета',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });

            }
        });
    },

    editGasomerApp: function(value) {
        // in use
        //var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var stPribor = Ext.data.StoreManager.get("StGasomer");
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            address:values.get('address'),
            house_id:values.get('house_id'),
            rowind:values.get('rowind'),
            what:"editAppGasomer"
        };

        //GRID
        var grAppPribor = Ext.getCmp('grAppGasomer');
        //LOGIKA

        Ext.Object.merge(value, params);
        QueryGasomer.addGasomer(value,function(results){

            if (results.success){
                stPribor.load({
                    params: {
                        what:'AppGasomer',
                        address_id: value.address_id,
                        gasomer_id: value.gasomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            grAppPribor.getView().getSelectionModel().select(value.rowind);
                            Ext.MessageBox.show({
                                title: 'Обновление прибора учета',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });

            }
        });
    },

    changeGasomerApp: function(value) {
        // in use
        var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var stPribor = Ext.data.StoreManager.get("StGasomer");
        var stHPribor = Ext.data.StoreManager.get("StHGasomer");//QueryVodomer.getResults <AppHVodomer>
        var StPPribora = Ext.data.StoreManager.get("StPGasomer");//QueryVodomer.getResults  <AllPokVodomera>

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            address:values.get('address'),
            house_id:values.get('house_id'),
            what:"changeAppGasomer"
        };

        //GRID
        var fmPribor = Ext.getCmp('fmGasomer');
        //LOGIKA

        Ext.Object.merge(value, params);
        QueryGasomer.addGasomer(value,function(results){
            if (results.success==="1"){
                Ext.MessageBox.show({
                    title: 'Замена прибора учета',
                    msg: results.msg,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
                fmPribor.getForm().reset();

                //  grAppVodomerKassa.getView().refresh();
                stPribor.load({
                    params: {
                        what:'AppGasomer',
                        address_id: value.address_id,
                        gasomer_id: value.gasomer_id,
                        login:value.login,
                        password:value.password
                    },
                    scope:this
                });
                stHPribor.load({
                    params: {
                        what:'AppHGasomer',
                        address_id: value.address_id,
                        what_id: value.address_id,
                        login:value.login,
                        password:value.password
                    },
                    scope:this
                });
                StPPribora.removeAll();

            }else {
                Ext.MessageBox.show({
                    title: 'Замена прибора учета',
                    msg: results.msg,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
            }
        });

    }

});
