/*
 * File: app/view/sprav/TabLgotnik.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Osbb.view.sprav.TabLgotnik', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tablgotnik',

    requires: [
        'Osbb.view.sprav.TabLgotnikViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.toolbar.Toolbar',
        'Ext.toolbar.Spacer',
        'Ext.form.field.ComboBox',
        'Ext.button.Button',
        'Ext.form.field.Hidden',
        'Ext.form.field.Date',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Action',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.grid.feature.GroupingSummary',
        'Ext.XTemplate',
        'Ext.grid.feature.Summary'
    ],

    viewModel: {
        type: 'tablgotnik'
    },
    height: 756,
    id: 'tabLgotnik',
    scrollable: true,
    layout: 'fit',
    closable: true,
    title: 'Льготники',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'gridpanel',
            id: 'grLgotnik',
            scrollable: true,
            title: '',
            store: 'StLgotnikTab',
            viewConfig: {
                emptyText: 'Нет записей по льготе'
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'tbspacer'
                        },
                        {
                            xtype: 'combobox',
                            hideMode: 'visibility',
                            id: 'cbTabLgotnikHouse',
                            width: 136,
                            fieldLabel: '',
                            name: 'house_id',
                            emptyText: 'Дом',
                            displayField: 'house',
                            queryMode: 'local',
                            store: 'StHousesOrg',
                            valueField: 'house_id',
                            listeners: {
                                select: 'onCbTabLgotnikHouseSelect'
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnPrintLgotnikHouse',
                            icon: 'resources/css/images/ico/printer.png',
                            text: ''
                        },
                        {
                            xtype: 'tbspacer',
                            width: 20
                        },
                        {
                            xtype: 'combobox',
                            hideMode: 'visibility',
                            id: 'cbTabLgotnikLgota',
                            width: 260,
                            fieldLabel: '',
                            name: 'gr',
                            emptyText: 'Выберите льготу',
                            displayField: 'lgota',
                            store: 'StLgota',
                            valueField: 'lgota_id',
                            listeners: {
                                select: 'onCbTabLgotnikSelect'
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnPrintLgotnikLgota',
                            icon: 'resources/css/images/ico/printer.png',
                            text: ''
                        },
                        {
                            xtype: 'tbspacer',
                            width: 20
                        },
                        {
                            xtype: 'combobox',
                            hideMode: 'visibility',
                            id: 'cbTabLgotnikGroup',
                            width: 211,
                            fieldLabel: '',
                            name: 'gr',
                            emptyText: 'Выберите группу',
                            displayField: 'law_article',
                            store: 'StLgota',
                            valueField: 'gr',
                            listeners: {
                                select: 'onCbTabLgotnikGroupSelect'
                            }
                        },
                        {
                            xtype: 'hiddenfield',
                            id: 'usluga1',
                            fieldLabel: 'Label',
                            name: 'usluga'
                        },
                        {
                            xtype: 'button',
                            id: 'btnPrintLgotnikGroup',
                            icon: 'resources/css/images/ico/printer.png',
                            text: ''
                        }
                    ]
                },
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'tbspacer'
                        },
                        {
                            xtype: 'datefield',
                            id: 'dataTabLgotnikEnd',
                            width: 209,
                            fieldLabel: 'Дата оконч',
                            labelWidth: 75,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd',
                            listeners: {
                                change: 'onDataTabLgotnikChangeEnd'
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnPrintLgotnikEnd',
                            icon: 'resources/css/images/ico/printer.png',
                            text: ''
                        },
                        {
                            xtype: 'tbspacer',
                            width: 20
                        },
                        {
                            xtype: 'datefield',
                            id: 'dataTabLgotnik',
                            width: 190,
                            fieldLabel: 'Дата  изм',
                            labelWidth: 70,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd',
                            listeners: {
                                change: 'onDataTabLgotnikChange'
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnPrintLgotnikIzm',
                            icon: 'resources/css/images/ico/printer.png',
                            text: ''
                        },
                        {
                            xtype: 'tbspacer',
                            width: 20
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var login = Ext.data.StoreManager.get("StUser").getAt(0).get('login');
                                var password = Ext.data.StoreManager.get("StUser").getAt(0).get('password');

                                var StLgotnik= Ext.data.StoreManager.get("StLgotnikTab");
                                StLgotnik.proxy.setExtraParam('what', 'tabLgotnik');
                                StLgotnik.proxy.setExtraParam('login', login);
                                StLgotnik.proxy.setExtraParam('password', password);
                                StLgotnik.load();
                            },
                            id: 'btnLgotaAll',
                            icon: 'resources/css/images/ico/add.png',
                            text: 'Все льготники'
                        },
                        {
                            xtype: 'button',
                            id: 'btnPrintLgotnikAll',
                            icon: 'resources/css/images/ico/printer.png',
                            text: ''
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'rownumberer',
                    width: 34,
                    text: 'п.н'
                },
                {
                    xtype: 'actioncolumn',
                    editRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val="";
                        return val;
                    },
                    width: 30,
                    menuDisabled: true,
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                var dt = new Date();
                                var winLgotnik = Ext.ClassManager.instantiateByAlias('widget.winlgotnik');
                                var form = winLgotnik.down('#fmLgotnik');
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var StLgota = Ext.data.StoreManager.get("StLgota");

                                var values =stUser.getAt(0);
                                StLgota.proxy.setExtraParam('login', values.get('login'));
                                StLgota.proxy.setExtraParam('password',values.get('password'));
                                StLgota.load();

                                var value = record;
                                //console.log(rowIndex);
                                //console.log(record);

                                view.getSelectionModel().select(record);
                                values.set({'vibor':'editTabLgotnik'});
                                stUser.sync();
                                form.loadRecord(value);
                                form.down('#winBtnAddLgotnik').setText('Обновить данные по льготнику');
                                winLgotnik.setTitle('Редактирование данных по льготнику');
                                winLgotnik.show();
                            },
                            icon: 'resources/css/images/ico/edit.png'
                        }
                    ]
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'address_id',
                    text: 'АдресИд'
                },
                {
                    xtype: 'gridcolumn',
                    width: 149,
                    dataIndex: 'address',
                    menuDisabled: true,
                    text: 'Адрес'
                },
                {
                    xtype: 'gridcolumn',
                    items: {
                        xtype: 'textfield',
                        flex: 1,
                        margin: 2,
                        enableKeyEvents: true,
                        listeners: {
                            keyup: function() {
                                            var store = this.up('tablepanel').store;
                                            store.clearFilter();
                                            if (this.value) {
                                                store.filter({
                                                    property     : 'fio',
                                                    value         : this.value,
                                                    anyMatch      : true,
                                                    caseSensitive : false
                                                });
                                            }
                                        },
                            buffer: 1000
                        }
                    },
                    width: 250,
                    dataIndex: 'fio',
                    menuDisabled: true,
                    text: 'Ф.И.О.',
                    editor: {
                        xtype: 'textfield'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    menuDisabled: true,
                    text: 'Период действия',
                    columns: [
                        {
                            xtype: 'datecolumn',
                            width: 80,
                            dataIndex: 'start',
                            menuDisabled: true,
                            text: 'начало',
                            format: 'd-m-y'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 80,
                            dataIndex: 'finish',
                            menuDisabled: true,
                            text: 'оконч',
                            format: 'd-m-y'
                        }
                    ]
                },
                {
                    xtype: 'numbercolumn',
                    width: 96,
                    dataIndex: 'inn',
                    menuDisabled: true,
                    text: 'инн',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    summaryType: 'sum',
                    width: 61,
                    dataIndex: 'people',
                    menuDisabled: true,
                    text: 'Чел',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'kartochka',
                    text: 'Карт'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'passport',
                    text: 'Паспорт'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'surname',
                    text: 'Фамилия'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'firstname',
                    text: 'Имя'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'lastname',
                    text: 'Отчество'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'surname_ua',
                    text: 'Фамилия укр'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'firstname_ua',
                    text: 'Имя укр'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'lastname_ua',
                    text: 'Отчество укр'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'lgota',
                    text: 'Льгота'
                },
                {
                    xtype: 'numbercolumn',
                    width: 38,
                    dataIndex: 'gr',
                    menuDisabled: true,
                    text: 'Гр',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    width: 53,
                    dataIndex: 'category',
                    menuDisabled: true,
                    text: 'Кат',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    width: 47,
                    dataIndex: 'percent',
                    menuDisabled: true,
                    text: '%',
                    format: '0'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        switch (value) {
                            case "да":
                            metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                            break;
                            case "нет":
                            metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                            break;
                        }
                        return metaData;

                    },
                    width: 40,
                    dataIndex: 'vkl',
                    menuDisabled: true,
                    text: 'Вкл'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'raion',
                    text: 'Raion'
                },
                {
                    xtype: 'datecolumn',
                    width: 89,
                    dataIndex: 'data_in',
                    menuDisabled: true,
                    text: 'Дата изм',
                    format: 'd-m-Y'
                },
                {
                    xtype: 'gridcolumn',
                    width: 165,
                    dataIndex: 'document',
                    text: 'Документ'
                },
                {
                    xtype: 'datecolumn',
                    width: 89,
                    dataIndex: 'data',
                    text: 'Дата',
                    format: 'd-m-Y'
                },
                {
                    xtype: 'gridcolumn',
                    width: 200,
                    dataIndex: 'given',
                    text: 'Выдан'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'operator',
                    text: 'Оператор'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'lgota_id',
                    text: 'ЛьготаИд'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'lgota_ua',
                    text: 'Льгота укр'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'lgotnik_id',
                    text: 'ЛьготникИд'
                },
                {
                    xtype: 'gridcolumn',
                    width: 600,
                    dataIndex: 'law_article',
                    text: 'Статья'
                }
            ],
            features: [
                {
                    ftype: 'groupingsummary',
                    groupHeaderTpl: [
                        '{columnName}: {name}'
                    ]
                },
                {
                    ftype: 'summary',
                    dock: 'top'
                }
            ]
        }
    ],

    onCbTabLgotnikHouseSelect: function(combo, record, eOpts) {
        var cbTabLgotnikLgota = Ext.getCmp('cbTabLgotnikLgota');
        var cbTabLgotnikGroup = Ext.getCmp('cbTabLgotnikGroup');
        var dataTabLgotnik = Ext.getCmp('dataTabLgotnik');

        var login = Ext.data.StoreManager.get("StUser").getAt(0).get('login');
        var password = Ext.data.StoreManager.get("StUser").getAt(0).get('password');
        var selected = record;
        var StLgotnik= Ext.data.StoreManager.get("StLgotnikTab");
        if (selected) {
            cbTabLgotnikLgota.clearValue();
            cbTabLgotnikGroup.clearValue();
            dataTabLgotnik.setValue("00000000");

            StLgotnik.proxy.setExtraParam('what', 'tabLgotnikHouse');
            StLgotnik.proxy.setExtraParam('house_id',selected.get("house_id"));
            StLgotnik.proxy.setExtraParam('login', login);
            StLgotnik.proxy.setExtraParam('password', password);
            StLgotnik.load();
        }
    },

    onCbTabLgotnikSelect: function(combo, record, eOpts) {
        var cbTabLgotnikHouse = Ext.getCmp('cbTabLgotnikHouse');
        var cbTabLgotnikGroup = Ext.getCmp('cbTabLgotnikGroup');
        var dataTabLgotnik = Ext.getCmp('dataTabLgotnik');

        var login = Ext.data.StoreManager.get("StUser").getAt(0).get('login');
        var password = Ext.data.StoreManager.get("StUser").getAt(0).get('password');
        var selected = record;
        var StLgotnik= Ext.data.StoreManager.get("StLgotnikTab");
        if (selected) {
            cbTabLgotnikHouse.clearValue();
            cbTabLgotnikGroup.clearValue();
            dataTabLgotnik.setValue("00000000");

            StLgotnik.proxy.setExtraParam('what', 'tabLgotnikLgota');
            StLgotnik.proxy.setExtraParam('lgota_id',selected.get("lgota_id"));
            StLgotnik.proxy.setExtraParam('login', login);
            StLgotnik.proxy.setExtraParam('password', password);
            StLgotnik.load();
        }

    },

    onCbTabLgotnikGroupSelect: function(combo, record, eOpts) {
        var cbTabLgotnikLgota = Ext.getCmp('cbTabLgotnikLgota');
        var cbTabLgotnikHouse = Ext.getCmp('cbTabLgotnikHouse');
        var dataTabLgotnik = Ext.getCmp('dataTabLgotnik');

        var login = Ext.data.StoreManager.get("StUser").getAt(0).get('login');
        var password = Ext.data.StoreManager.get("StUser").getAt(0).get('password');
        var selected = record;
        var StLgotnik= Ext.data.StoreManager.get("StLgotnikTab");
        if (selected) {

            cbTabLgotnikLgota.clearValue();
            cbTabLgotnikHouse.clearValue();
            dataTabLgotnik.setValue("00000000");

            StLgotnik.proxy.setExtraParam('what', 'tabLgotnikGroup');
            StLgotnik.proxy.setExtraParam('gr',selected.get("gr"));
            StLgotnik.proxy.setExtraParam('login', login);
            StLgotnik.proxy.setExtraParam('password', password);
            StLgotnik.load();
        }
    },

    onDataTabLgotnikChangeEnd: function(field, newValue, oldValue, eOpts) {
        var cbTabLgotnikLgota = Ext.getCmp('cbTabLgotnikLgota');
        var cbTabLgotnikHouse = Ext.getCmp('cbTabLgotnikHouse');
        var cbTabLgotnikGroup = Ext.getCmp('cbTabLgotnikGroup');

        var login = Ext.data.StoreManager.get("StUser").getAt(0).get('login');
        var password = Ext.data.StoreManager.get("StUser").getAt(0).get('password');
        var StLgotnik= Ext.data.StoreManager.get("StLgotnikTab");
            StLgotnik.proxy.setExtraParam('what', 'tabLgotnikEnd');
            StLgotnik.proxy.setExtraParam('login', login);
            StLgotnik.proxy.setExtraParam('password', password);
            cbTabLgotnikLgota.clearValue();
            cbTabLgotnikGroup.clearValue();
            cbTabLgotnikHouse.clearValue();

        if (newValue) {
             //   console.log(newValue);

            StLgotnik.proxy.setExtraParam('data_from',Ext.Date.getFirstDateOfMonth(newValue));
            StLgotnik.proxy.setExtraParam('data_to',Ext.Date.getLastDateOfMonth(newValue));
        }else if (oldValue) {
                //    console.log(oldValue);

            StLgotnik.proxy.setExtraParam('data_from',Ext.Date.getFirstDateOfMonth(oldValue));
            StLgotnik.proxy.setExtraParam('data_to',Ext.Date.getLastDateOfMonth(oldValue));

        }
        StLgotnik.load();

    },

    onDataTabLgotnikChange: function(field, newValue, oldValue, eOpts) {
        var cbTabLgotnikLgota = Ext.getCmp('cbTabLgotnikLgota');
        var cbTabLgotnikHouse = Ext.getCmp('cbTabLgotnikHouse');
        var cbTabLgotnikGroup = Ext.getCmp('cbTabLgotnikGroup');

        var login = Ext.data.StoreManager.get("StUser").getAt(0).get('login');
        var password = Ext.data.StoreManager.get("StUser").getAt(0).get('password');
        var StLgotnik= Ext.data.StoreManager.get("StLgotnikTab");
            StLgotnik.proxy.setExtraParam('what', 'tabLgotnikIzm');
            StLgotnik.proxy.setExtraParam('login', login);
            StLgotnik.proxy.setExtraParam('password', password);
            cbTabLgotnikLgota.clearValue();
            cbTabLgotnikGroup.clearValue();
            cbTabLgotnikHouse.clearValue();

        if (newValue) {
            StLgotnik.proxy.setExtraParam('data_from',Ext.Date.getFirstDateOfMonth(newValue));
            StLgotnik.proxy.setExtraParam('data_to',Ext.Date.getLastDateOfMonth(newValue));
        }else if (oldValue) {
            StLgotnik.proxy.setExtraParam('data_from',Ext.Date.getFirstDateOfMonth(oldValue));
            StLgotnik.proxy.setExtraParam('data_to',Ext.Date.getLastDateOfMonth(oldValue));

        }
        StLgotnik.load();

    }

});