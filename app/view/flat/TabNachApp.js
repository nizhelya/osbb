/*
 * File: app/view/flat/TabNachApp.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Osbb.view.flat.TabNachApp', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabnachapp',

    requires: [
        'Osbb.view.flat.TabNachAppViewModel',
        'Ext.form.Panel',
        'Ext.form.field.Hidden',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Number',
        'Ext.panel.Tool',
        'Ext.form.FieldSet',
        'Ext.form.field.Number',
        'Ext.form.field.Checkbox',
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.grid.column.Date',
        'Ext.grid.column.Action',
        'Ext.grid.feature.Summary',
        'Ext.form.FieldContainer',
        'Ext.form.field.Date'
    ],

    viewModel: {
        type: 'tabnachapp'
    },
    height: 831,
    id: 'tabNachApp',
    scrollable: true,
    title: 'Начисления',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            id: 'fmInfoNachApp',
            margin: '0 0 5 0',
            style: 'background-color: #C2D9C9;',
            width: 1092,
            layout: 'absolute',
            title: '',
            items: [
                {
                    xtype: 'hiddenfield',
                    fieldLabel: '',
                    labelSeparator: ' ',
                    name: 'address_id'
                },
                {
                    xtype: 'hiddenfield',
                    labelSeparator: ' ',
                    labelStyle: '',
                    name: 'address'
                },
                {
                    xtype: 'hiddenfield',
                    fieldLabel: '',
                    labelSeparator: ' ',
                    labelStyle: '',
                    name: 'nanim'
                },
                {
                    xtype: 'gridpanel',
                    x: 485,
                    y: 10,
                    height: 150,
                    id: 'grLgotnikNachApp',
                    scrollable: true,
                    width: 590,
                    title: 'Льготники',
                    emptyText: 'Льготников нет',
                    store: 'StLgotnik',
                    viewConfig: {
                        emptyText: 'Льготников нет'
                    },
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'address_id',
                            text: 'Address_id'
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'kartochka',
                            text: 'карточка'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'passport',
                            text: 'паспорт'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 127,
                            dataIndex: 'fio',
                            menuDisabled: true,
                            text: 'Ф.И.О.'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 174,
                            dataIndex: 'lgota',
                            menuDisabled: true,
                            text: 'льгота'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 100,
                            dataIndex: 'inn',
                            menuDisabled: true,
                            text: 'инн',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'category',
                            text: 'Category',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 40,
                            dataIndex: 'people',
                            menuDisabled: true,
                            text: 'чел',
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 40,
                            dataIndex: 'percent',
                            menuDisabled: true,
                            text: '%'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 40,
                            dataIndex: 'gr',
                            menuDisabled: true,
                            text: 'гр',
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 40,
                            dataIndex: 'vkl',
                            menuDisabled: true,
                            text: 'вкл'
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                //in use
                                var grid = tool.findParentByType('grid');
                                var fmVodomer = Ext.getCmp('fmVodomer');
                                var vodomer_id = fmVodomer.getForm().findField('vodomer_id').getValue();
                                //STORE
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var stLgotnik = Ext.data.StoreManager.get("StLgotnik");
                                //LOGIN & PASSWORD
                                var values =stUser.getAt(0);

                                //LOGIKA


                                stLgotnik.removeAll();
                                stLgotnik.load({
                                    params: {
                                        login:values.get('login'),
                                        password:values.get('password'),
                                        address_id:values.get('address_id'),
                                        what_id:values.get('address_id'),
                                        what:"HistoryLgotnik"
                                    },
                                    callback: function(records,operation,success){
                                        if(success){
                                            //console.log(grid);
                                            grid.getView().refresh();
                                        }
                                    },
                                    scope:this
                                });
                            },
                            tooltip: 'Показать историю льготников',
                            type: 'search'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 10,
                    y: 10,
                    height: 150,
                    style: 'background-color: #DCDCDC;',
                    width: 100,
                    layout: 'absolute',
                    title: 'Состав (чел)',
                    items: [
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Проп',
                            labelSeparator: ' ',
                            labelWidth: 40,
                            name: 'tenant',
                            hideTrigger: true,
                            allowDecimals: false,
                            decimalPrecision: 0
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            x: 0,
                            y: 30,
                            fieldLabel: 'Отс',
                            labelSeparator: ' ',
                            labelWidth: 40,
                            name: 'absent',
                            hideTrigger: true,
                            allowDecimals: false,
                            decimalPrecision: 0,
                            minValue: 0
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            x: 0,
                            y: 60,
                            fieldLabel: 'Подн',
                            labelSeparator: ' ',
                            labelWidth: 40,
                            name: 'podnan',
                            hideTrigger: true,
                            allowDecimals: false,
                            decimalPrecision: 0,
                            minValue: 0
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            x: 0,
                            y: 90,
                            fieldLabel: 'Льг',
                            labelSeparator: ' ',
                            labelWidth: 40,
                            name: 'lgotchik',
                            hideTrigger: true,
                            allowDecimals: false,
                            decimalPrecision: 0,
                            minValue: 0
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 115,
                    y: 10,
                    height: 150,
                    style: 'background-color: #DCDCDC;',
                    width: 235,
                    layout: 'absolute',
                    title: 'Площадь (м2)',
                    items: [
                        {
                            xtype: 'numberfield',
                            width: 110,
                            fieldLabel: 'Полезн',
                            labelSeparator: ' ',
                            labelWidth: 50,
                            name: 'area_full',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 30,
                            width: 110,
                            fieldLabel: 'Жилая',
                            labelSeparator: ' ',
                            labelWidth: 50,
                            name: 'area_life',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 60,
                            width: 110,
                            fieldLabel: 'Допол',
                            labelSeparator: ' ',
                            labelWidth: 50,
                            name: 'area_dop',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 120,
                            y: 60,
                            width: 90,
                            fieldLabel: 'Дт_ид',
                            labelSeparator: ' ',
                            labelWidth: 45,
                            name: 'dteplomer_id',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 120,
                            y: 90,
                            width: 90,
                            fieldLabel: 'Дв_ид',
                            labelSeparator: ' ',
                            labelWidth: 45,
                            name: 'dvodomer_id',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 90,
                            width: 110,
                            fieldLabel: 'Балкон',
                            labelSeparator: ' ',
                            labelWidth: 50,
                            name: 'area_balk',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 120,
                            y: 0,
                            width: 90,
                            fieldLabel: 'Комнат',
                            labelSeparator: ' ',
                            labelWidth: 50,
                            name: 'room',
                            hideTrigger: true,
                            allowDecimals: false,
                            autoStripChars: true,
                            decimalPrecision: 0
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 120,
                            y: 30,
                            fieldLabel: 'Лифт',
                            labelWidth: 40,
                            name: 'lift',
                            boxLabel: 'Нет',
                            inputValue: 'да',
                            uncheckedValue: 'нет',
                            listeners: {
                                change: 'onCheckboxfieldChange4'
                            }
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 355,
                    y: 10,
                    height: 150,
                    style: 'background-color: #DCDCDC;',
                    width: 120,
                    title: 'Приборы учета',
                    items: [
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            fieldLabel: 'Сч Хв',
                            labelWidth: 40,
                            name: 'vxvoda',
                            boxLabel: 'Нет',
                            inputValue: 'да',
                            uncheckedValue: 'нет',
                            listeners: {
                                change: 'onCheckboxfieldChange'
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            fieldLabel: 'Сч Гв',
                            labelWidth: 40,
                            name: 'vgvoda',
                            boxLabel: 'Нет',
                            inputValue: 'да',
                            uncheckedValue: 'нет',
                            listeners: {
                                change: 'onCheckboxfieldChange1'
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            fieldLabel: 'Т-мер',
                            labelWidth: 40,
                            name: 'teplomer',
                            boxLabel: 'Нет',
                            inputValue: 'да',
                            uncheckedValue: 'нет',
                            listeners: {
                                change: 'onCheckboxfieldChange2'
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            fieldLabel: 'Бойл',
                            labelWidth: 40,
                            name: 'boiler',
                            boxLabel: 'Нет',
                            inputValue: 'да',
                            uncheckedValue: 'нет',
                            listeners: {
                                change: 'onCheckboxfieldChange3'
                            }
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'tabpanel',
            height: 599,
            id: 'tabPnNachApp',
            width: 1096,
            activeTab: 0,
            items: [
                {
                    xtype: 'panel',
                    title: 'My Panel',
                    tabConfig: {
                        xtype: 'tab',
                        hidden: true
                    }
                },
                {
                    xtype: 'form',
                    id: 'tabFmAppKvartplata',
                    layout: 'absolute',
                    title: 'Квартплата',
                    items: [
                        {
                            xtype: 'gridpanel',
                            x: 5,
                            y: 5,
                            height: 435,
                            id: 'grNachKvartplata',
                            scrollable: true,
                            width: 225,
                            title: 'Период начисления',
                            store: 'StTekNachApp',
                            viewConfig: {
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 80,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'месяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 80,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'Долг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var values =stUser.getAt(0);
                                        var form = tool.findParentByType('form');

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AddAddressNachislKvartplata'
                                        };

                                        //Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(params,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'KvartplataApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        if(results.success === "1"){
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                        }else{
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                            Ext.MessageBox.show({title: 'Ввод данных',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    tooltip: 'добавить запись',
                                    type: 'plus'
                                },
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'KvartplataAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'search'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 240,
                            y: 260,
                            height: 215,
                            id: 'grLgotaNachKvartplata',
                            scrollable: true,
                            width: 815,
                            title: 'начисление на бюджет',
                            store: 'StLgotaNachVoda',
                            viewConfig: {
                                emptyText: 'Начислений по льготе нет'
                            },
                            columns: [
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var pr = r.get('pr');
                                                if (pr === 0 ) {
                                                    metaData = 'x-grid-center-icon';
                                                } else if (pr === 1   ){
                                                    metaData = 'x-hide-display';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;
                                                var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                                rbgTypeNachVoda.hide();
                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'addLgotaKvartplataPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.show();

                                            },
                                            icon: 'resources/css/images/ico/add.png',
                                            tooltip: 'Добавить перерасчет по льготе'
                                        },
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');

                                                if (pr === 0 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ((pr === 1) && (check_date === tek_date) ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppKvartplata');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaKvartplataPerer"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachKvartplata');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете перерасчет по квартплате на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по квартплате на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'KvartplataApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по квартплате на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/delete.png',
                                            tooltip: 'Удалить перерасчет по льготе'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'lgota_id',
                                    text: 'льгота_ид'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'sdata',
                                    menuDisabled: true,
                                    text: 'дата с',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'fdata',
                                    menuDisabled: true,
                                    text: 'дата по',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 120,
                                    dataIndex: 'fio',
                                    menuDisabled: true,
                                    text: 'Ф.И.О'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 130,
                                    dataIndex: 'lgota',
                                    menuDisabled: true,
                                    text: 'Льгота',
                                    tooltip: 'name'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 35,
                                    align: 'center',
                                    dataIndex: 'percent',
                                    menuDisabled: true,
                                    text: '%',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 44,
                                    align: 'center',
                                    dataIndex: 'people',
                                    menuDisabled: true,
                                    text: 'чел',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 60,
                                    align: 'right',
                                    dataIndex: 'tarif',
                                    menuDisabled: true,
                                    text: 'тариф',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 55,
                                    align: 'right',
                                    dataIndex: 'qty',
                                    menuDisabled: true,
                                    text: 'S (м&sup2;)'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 74,
                                    align: 'right',
                                    dataIndex: 'budjet',
                                    menuDisabled: true,
                                    text: 'бюджет'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 40,
                                    dataIndex: 'pr',
                                    menuDisabled: true,
                                    text: 'пр',
                                    format: '0'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'editLgotaKvartplata'});
                                                stUser.sync();

                                                form.down('#btAddLgotaPerer').setText('Обновить запись');
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/edit.png',
                                            tooltip: 'Редактировать запись'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');
                                                if (pr === 1 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ( (pr === 0)  ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppKvartplata');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaKvartplata"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachKvartplata');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'KvartplataApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/no.png',
                                            tooltip: 'Удалить  запись '
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'info',
                                    menuDisabled: true,
                                    text: 'инфо',
                                    tooltip: 'name'
                                }
                            ],
                            features: [
                                {
                                    ftype: 'summary'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                        var gridNachisl = Ext.getCmp('grNachKvartplata');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                        var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                        var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);

                                        //console.log(valueNachisl.index);
                                        if (value !==undefined && valueNachisl !==undefined ){
                                            var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                            var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                            var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                            var dt = new Date();
                                            var dt_nach = new Date(valueNachisl.get('data'));
                                            var check_date = Ext.Date.format(dt, 'Y-m');
                                            var date_check = Ext.Date.format(dt_nach, 'Y-m');
                                            form.getForm().findField('m2').hide();
                                            form.getForm().findField('gkm2').hide();
                                            rbgTypeNachVoda.hide();
                                            winAddLgotaPerer.setTitle('Добавление записи на бюджет');

                                            var pr = form.getForm().findField('checkType').getValue();
                                            //console.log(pr);

                                            if (pr === true ) {
                                                values.set({'vibor':'addLgotaKvartplata'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('square_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("0");
                                                form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            } else {

                                                values.set({'vibor':'addLgotaKvartplataPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('square_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("1");
                                                form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            }


                                        } else{
                                            Ext.MessageBox.show({
                                                title: 'Добавлениезаписи начисления  на бюджет',
                                                msg: 'Не выбран льготчик',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        }
                                    },
                                    tooltip: 'добавить начисление по льготнику',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldcontainer',
                            x: 240,
                            y: 150,
                            height: 100,
                            style: 'background-color: #DCDCDC;',
                            width: 435,
                            layout: 'absolute',
                            fieldLabel: 'Бюджет',
                            labelAlign: 'top',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    x: 5,
                                    y: 0,
                                    width: 140,
                                    fieldLabel: 'Sльг (м&sup2;)',
                                    labelWidth: 60,
                                    name: 'square_lg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 290,
                                    y: 0,
                                    width: 130,
                                    fieldLabel: 'Льгота',
                                    labelWidth: 45,
                                    name: 'budjet',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 155,
                                    y: 0,
                                    width: 125,
                                    fieldLabel: 'Перер',
                                    labelWidth: 45,
                                    name: 'pbudjet',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'textfield',
                                    x: 10,
                                    y: 35,
                                    style: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    width: 410,
                                    fieldLabel: 'инфо',
                                    labelWidth: 40,
                                    name: 'msq_lgota',
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 680,
                            y: 150,
                            height: 100,
                            style: 'background-color: #DCDCDC;',
                            width: 380,
                            layout: 'absolute',
                            title: '',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    x: 0,
                                    y: 15,
                                    width: 75,
                                    fieldLabel: 'Оплачено',
                                    labelAlign: 'top',
                                    labelWidth: 70,
                                    name: 'oplacheno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 80,
                                    y: 15,
                                    width: 50,
                                    fieldLabel: 'Субc',
                                    labelAlign: 'top',
                                    labelWidth: 70,
                                    name: 'subsidia',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 135,
                                    y: 15,
                                    width: 50,
                                    fieldLabel: 'Льг',
                                    labelAlign: 'top',
                                    labelWidth: 70,
                                    name: 'lg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 190,
                                    y: 15,
                                    width: 80,
                                    fieldLabel: 'Сальдо кон',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppKvartplataIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachKvartplata');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'KvartplataApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);
                                                    }else{
                                                        form.reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    x: 325,
                                    y: 35,
                                    formBind: true,
                                    id: 'btnKvartplataAppIns',
                                    width: 30,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    scale: 'medium',
                                    text: ''
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var zadol = form.findField('zadol').getValue();
                                        var tarif = form.findField('tarif').getValue();
                                        var square = form.findField('square').getValue();
                                        var dop = form.findField('dop').getValue();
                                        var lift = form.findField('lift').getValue();
                                        var remont = form.findField('remont').getValue();

                                        var perer = form.findField('perer').getValue();
                                        var budjet = form.findField('budjet').getValue();
                                        var pbudjet = form.findField('pbudjet').getValue();
                                        var oplacheno = form.findField('oplacheno').getValue();

                                        var nachisleno =0;
                                        var kvartplata = 0;

                                        if ((tarif===0)  &&  square > 0 ) {

                                            Ext.MessageBox.show({
                                                title: 'Проверка тарифа',
                                                msg: 'Введите тариф по услуге',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        } else {
                                            kvartplata = square * tarif - budjet ;
                                            nachisleno =kvartplata  +  perer +  dop + remont + lift;
                                            form.findField('kvartplata').setValue(kvartplata);
                                            form.findField('nachisleno').setValue(nachisleno);
                                            form.findField('dolg').setValue(zadol + nachisleno - oplacheno);

                                        }
                                    },
                                    x: 285,
                                    y: 35,
                                    formBind: true,
                                    id: 'btnKvartplataAppPerer',
                                    width: 30,
                                    icon: 'resources/css/images/ico/schet.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Просчитать'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldcontainer',
                            x: 240,
                            y: 5,
                            height: 135,
                            style: 'background-color: #DCDCDC;',
                            width: 820,
                            layout: 'absolute',
                            fieldLabel: 'Начислено, грн',
                            labelAlign: 'top',
                            items: [
                                {
                                    xtype: 'textfield',
                                    x: 90,
                                    y: 5,
                                    style: 'background-color:#F0F8FF;font-size:10pt;;',
                                    width: 710,
                                    fieldLabel: 'инфо',
                                    labelWidth: 40,
                                    name: 'info',
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;'
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 645,
                                    y: 40,
                                    width: 70,
                                    fieldLabel: 'Тар пер',
                                    labelAlign: 'top',
                                    labelWidth: 60,
                                    name: 'ptarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 290,
                                    y: 40,
                                    width: 70,
                                    fieldLabel: 'Тариф',
                                    labelAlign: 'top',
                                    labelWidth: 60,
                                    name: 'tarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 360,
                                    y: 40,
                                    width: 70,
                                    fieldLabel: 'Квартпл',
                                    labelAlign: 'top',
                                    labelWidth: 70,
                                    name: 'kvartplata',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 430,
                                    y: 40,
                                    width: 50,
                                    fieldLabel: 'Доп',
                                    labelAlign: 'top',
                                    labelWidth: 70,
                                    name: 'dop',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 480,
                                    y: 40,
                                    width: 50,
                                    fieldLabel: 'Лифт',
                                    labelAlign: 'top',
                                    labelWidth: 70,
                                    name: 'lift',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 530,
                                    y: 40,
                                    width: 50,
                                    fieldLabel: 'Рем',
                                    labelAlign: 'top',
                                    labelWidth: 70,
                                    name: 'remont',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 580,
                                    y: 40,
                                    width: 65,
                                    fieldLabel: 'Перер',
                                    labelAlign: 'top',
                                    labelWidth: 70,
                                    name: 'perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 715,
                                    y: 40,
                                    width: 95,
                                    fieldLabel: 'Начислено',
                                    labelAlign: 'top',
                                    labelWidth: 70,
                                    name: 'nachisleno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 220,
                                    y: 40,
                                    width: 70,
                                    fieldLabel: 'S  (м&sup2;)',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'square',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 125,
                                    y: 40,
                                    width: 95,
                                    fieldLabel: 'Сальдо нач',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'datefield',
                                    x: 5,
                                    y: 40,
                                    border: '0px',
                                    width: 120,
                                    fieldLabel: 'Период ',
                                    labelAlign: 'top',
                                    labelWidth: 50,
                                    name: 'data',
                                    fieldStyle: 'background-color:#F0F8FF;font-size:11pt;text-align:right;',
                                    hideTrigger: true,
                                    format: 'F,Y',
                                    startDay: 1,
                                    submitFormat: 'Ymd'
                                },
                                {
                                    xtype: 'button',
                                    x: 5,
                                    y: 0,
                                    id: 'printRaspechatakaKvartplata',
                                    icon: 'resources/css/images/ico/printer24.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Печать расчетного листка',
                                    tooltipType: 'title'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var grNach = Ext.getCmp('grNachKvartplata');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        grNach.getView().getSelectionModel().clearSelections();
                                        grNach.getView().getSelectionModel().select(ind);
                                    },
                                    x: 50,
                                    y: 0,
                                    formBind: true,
                                    id: 'btnKvartplataAppReset',
                                    icon: 'resources/css/images/ico/refresh.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Восстановить'
                                }
                            ]
                        }
                    ],
                    tabConfig: {
                        xtype: 'tab',
                        tabIndex: 0
                    }
                },
                {
                    xtype: 'form',
                    id: 'tabFmAppRfond',
                    width: 1096,
                    layout: 'absolute',
                    title: 'РФонд',
                    items: [
                        {
                            xtype: 'gridpanel',
                            x: 0,
                            y: 0,
                            height: 500,
                            id: 'grNachRfond',
                            scrollable: true,
                            width: 220,
                            title: 'Период начисления',
                            store: 'StTekNachApp',
                            viewConfig: {
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 80,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'месяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 75,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'Долг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var values =stUser.getAt(0);
                                        var form = tool.findParentByType('form');

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AddAddressNachislVaxta'
                                        };

                                        //Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(params,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'VaxtaApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        if(results.success === "1"){
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                        }else{
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                            Ext.MessageBox.show({title: 'Ввод данных',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    tooltip: 'добавить запись',
                                    type: 'plus'
                                },
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'VaxtaAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'search'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldcontainer',
                            x: 390,
                            y: 10,
                            height: 210,
                            style: 'background-color: #DCDCDC;',
                            width: 510,
                            layout: 'absolute',
                            fieldLabel: 'Начислено ,грн',
                            labelAlign: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    x: 430,
                                    y: 85,
                                    id: 'printRaspechatakaVaxta1',
                                    icon: 'resources/css/images/ico/printer24.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Печать расчетного листка',
                                    tooltipType: 'title'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 10,
                                    y: 130,
                                    width: 475,
                                    fieldLabel: 'инфо перер',
                                    name: 'info'
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 5,
                                    width: 125,
                                    fieldLabel: 'тариф',
                                    labelWidth: 55,
                                    name: 'tarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 155,
                                    y: 45,
                                    width: 130,
                                    fieldLabel: 'Тар пер',
                                    labelWidth: 60,
                                    name: 'ptarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 170,
                                    y: 5,
                                    width: 115,
                                    fieldLabel: 'РФонд',
                                    labelWidth: 40,
                                    name: 'rfond',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 145,
                                    y: 85,
                                    width: 140,
                                    fieldLabel: 'Перерасч',
                                    labelWidth: 70,
                                    name: 'perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 325,
                                    y: 5,
                                    width: 140,
                                    fieldLabel: 'Начислено',
                                    labelWidth: 70,
                                    name: 'nachisleno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 325,
                                    y: 40,
                                    width: 140,
                                    fieldLabel: 'Оплачено',
                                    labelWidth: 70,
                                    name: 'oplacheno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 45,
                                    width: 125,
                                    fieldLabel: 'Человек',
                                    labelWidth: 55,
                                    name: 'people',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 85,
                                    width: 125,
                                    fieldLabel: 'S  (м&sup2;)',
                                    labelWidth: 55,
                                    name: 'square',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        //this.up('#winAddVodomer').close();
                                        var form = button.findParentByType('form').getForm();
                                        //form.reset();
                                        var zadol = form.findField('zadol').getValue();
                                        var tarif = form.findField('tarif').getValue();
                                        var people = form.findField('people').getValue();
                                        var square = form.findField('square').getValue();
                                        var perer = form.findField('perer').getValue();
                                        var oplacheno = form.findField('oplacheno').getValue();

                                        var nachisleno =0;
                                        var rfond = 0;

                                        rfond =  tarif ;
                                        nachisleno =rfond +  perer;
                                        form.findField('rfond').setValue(rfond);
                                        form.findField('nachisleno').setValue(nachisleno);
                                        form.findField('dolg').setValue(zadol + nachisleno - oplacheno);


                                    },
                                    x: 375,
                                    y: 85,
                                    formBind: true,
                                    id: 'btnRfondAppPerer',
                                    width: 30,
                                    icon: 'resources/css/images/ico/schet.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Просчитать'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var grNach = Ext.getCmp('grNachRfond');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        grNach.getView().getSelectionModel().clearSelections();
                                        grNach.getView().getSelectionModel().select(ind);
                                    },
                                    x: 325,
                                    y: 85,
                                    formBind: true,
                                    id: 'btnRfondAppReset',
                                    width: 30,
                                    icon: 'resources/css/images/ico/refresh.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Восстановить'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 230,
                            y: 65,
                            height: 150,
                            style: 'background-color: #DCDCDC;',
                            width: 145,
                            title: '',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на начало',
                                    labelAlign: 'top',
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на конец',
                                    labelAlign: 'top',
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppRfondIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachRfond');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);

                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'RfondApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);

                                                    }else{
                                                        form.reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    id: 'btnRfondAppIns',
                                    width: 100,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записать'
                                }
                            ]
                        },
                        {
                            xtype: 'datefield',
                            x: 230,
                            y: 10,
                            border: '0px',
                            margin: '10 0 10 0',
                            width: 150,
                            fieldLabel: 'Период начислен',
                            hideLabel: true,
                            labelAlign: 'top',
                            labelWidth: 50,
                            name: 'data',
                            fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                            hideTrigger: true,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd'
                        }
                    ],
                    tabConfig: {
                        xtype: 'tab',
                        tabIndex: 1
                    }
                },
                {
                    xtype: 'form',
                    id: 'tabFmAppEnergy',
                    layout: 'absolute',
                    title: 'Электроэнергия',
                    tabConfig: {
                        xtype: 'tab',
                        tabIndex: 2
                    },
                    items: [
                        {
                            xtype: 'gridpanel',
                            x: 0,
                            y: 0,
                            height: 490,
                            id: 'grNachEnergy',
                            scrollable: true,
                            width: 225,
                            title: 'Период начисления',
                            store: 'StTekNachApp',
                            viewConfig: {
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 80,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'месяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 80,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'Долг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var values =stUser.getAt(0);
                                        var form = tool.findParentByType('form');

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AddAddressNachislEnergy'
                                        };

                                        //Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(params,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'EnergyApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        if(results.success === "1"){
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                        }else{
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                            Ext.MessageBox.show({title: 'Ввод данных',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    tooltip: 'добавить запись',
                                    type: 'plus'
                                },
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'EnergyAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'search'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 240,
                            y: 230,
                            height: 260,
                            id: 'grLgotaNachEnergy',
                            scrollable: true,
                            width: 840,
                            title: 'начисление на бюджет',
                            store: 'StLgotaNachVoda',
                            viewConfig: {
                                emptyText: 'Начислений по льготе нет'
                            },
                            columns: [
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var pr = r.get('pr');
                                                if (pr === 0 ) {
                                                    metaData = 'x-grid-center-icon';
                                                } else if (pr === 1   ){
                                                    metaData = 'x-hide-display';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'addLgotaEnergyPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/add.png',
                                            tooltip: 'Добавить перерасчет по льготе'
                                        },
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');

                                                if (pr === 0 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ((pr === 1) && (check_date === tek_date) ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppPodogrev');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaEnergyPerer"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachEnergy');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете перерасчет по электроэнергии на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по электроэнергии на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'EnergyApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по электроэнергии на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/delete.png',
                                            tooltip: 'Удалить перерасчет по льготе'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'sdata',
                                    menuDisabled: true,
                                    text: 'дата с',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'fdata',
                                    menuDisabled: true,
                                    text: 'дата по',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 120,
                                    dataIndex: 'fio',
                                    menuDisabled: true,
                                    text: 'Ф.И.О'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 130,
                                    dataIndex: 'lgota',
                                    menuDisabled: true,
                                    text: 'Льгота',
                                    tooltip: 'name'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 35,
                                    align: 'center',
                                    dataIndex: 'percent',
                                    menuDisabled: true,
                                    text: '%',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 44,
                                    align: 'center',
                                    dataIndex: 'people',
                                    menuDisabled: true,
                                    text: 'чел',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 60,
                                    align: 'right',
                                    dataIndex: 'tarif',
                                    menuDisabled: true,
                                    text: 'тариф',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 49,
                                    align: 'right',
                                    dataIndex: 'qty',
                                    menuDisabled: true,
                                    text: 'кВт-ч',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 74,
                                    align: 'right',
                                    dataIndex: 'budjet',
                                    menuDisabled: true,
                                    text: 'бюджет'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 40,
                                    dataIndex: 'pr',
                                    menuDisabled: true,
                                    text: 'пр',
                                    format: '0'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'editLgotaEnergy'});
                                                stUser.sync();

                                                form.down('#btAddLgotaPerer').setText('Обновить запись');
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/edit.png',
                                            tooltip: 'Редактировать запись'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');
                                                if (pr === 1 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ( (pr === 0)  ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppEnergy');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaEnergy"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachEnergy');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по электроэнергии на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'EnergyApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления  на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/no.png',
                                            tooltip: 'Удалить  запись '
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'info',
                                    menuDisabled: true,
                                    text: 'инфо',
                                    tooltip: 'name'
                                }
                            ],
                            features: [
                                {
                                    ftype: 'summary'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                        var gridNachisl = Ext.getCmp('grNachEnergy');

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);

                                        var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                        var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                        var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);

                                        if (value !==undefined && valueNachisl !==undefined ){
                                            var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                            var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                            var dt = new Date();
                                            var dt_nach = new Date(valueNachisl.get('data'));
                                            var check_date = Ext.Date.format(dt, 'Y-m');
                                            var date_check = Ext.Date.format(dt_nach, 'Y-m');

                                            form.getForm().findField('m2').hide();
                                            form.getForm().findField('gkm2').hide();
                                            winAddLgotaPerer.setTitle('Добавление записи на бюджет');

                                            var pr = form.getForm().findField('checkType').getValue();
                                            //console.log(pr);

                                            if (pr === true ) {
                                                values.set({'vibor':'addLgotaEnergy'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('kwh_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("0");
                                                form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            } else {

                                                values.set({'vibor':'addLgotaEnergyPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('kwh_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("1");
                                                form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            }


                                        } else{
                                            Ext.MessageBox.show({
                                                title: 'Добавлениезаписи начисления  на бюджет',
                                                msg: 'Не выбран льготчик',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        }
                                    },
                                    tooltip: 'добавить начисление по льготнику',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'datefield',
                            x: 240,
                            y: 0,
                            border: '0px',
                            margin: '10 0 10 0',
                            width: 150,
                            fieldLabel: 'Период начислен',
                            hideLabel: true,
                            labelAlign: 'top',
                            labelWidth: 50,
                            name: 'data',
                            fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                            hideTrigger: true,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd'
                        },
                        {
                            xtype: 'fieldset',
                            x: 240,
                            y: 45,
                            height: 175,
                            style: 'background-color: #DCDCDC;',
                            width: 140,
                            title: 'Сальдо',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 119,
                                    fieldLabel: 'Сальдо на начало',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 119,
                                    fieldLabel: 'Сальдо на конец',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppEnergyIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachEnergy');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'EnergyApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);
                                                    }else{
                                                        form.reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    height: 30,
                                    id: 'btnEnergyAppIns',
                                    margin: '10 0 0 0',
                                    width: 90,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записать'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 400,
                            y: 5,
                            height: 215,
                            style: 'background-color: #DCDCDC;',
                            width: 680,
                            layout: 'absolute',
                            title: 'Начислено, грн',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    x: 5,
                                    y: 35,
                                    width: 115,
                                    fieldLabel: 'тариф',
                                    labelWidth: 55,
                                    name: 'tarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 5,
                                    y: 65,
                                    width: 115,
                                    fieldLabel: 'Тар пер',
                                    labelWidth: 55,
                                    name: 'ptarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 5,
                                    y: 5,
                                    width: 115,
                                    fieldLabel: 'человек',
                                    labelWidth: 55,
                                    name: 'people',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 0
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 0,
                                    y: 95,
                                    width: 120,
                                    fieldLabel: 'кВт-ч',
                                    labelWidth: 40,
                                    name: 'kwh',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 140,
                                    y: 5,
                                    width: 125,
                                    fieldLabel: 'кВт-ч',
                                    labelWidth: 40,
                                    name: 'kwhn',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 140,
                                    y: 35,
                                    width: 125,
                                    fieldLabel: 'Норма',
                                    labelWidth: 55,
                                    name: 'norma',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 455,
                                    y: 10,
                                    width: 155,
                                    fieldLabel: 'Начислено',
                                    labelWidth: 70,
                                    name: 'nachisleno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 455,
                                    y: 40,
                                    width: 155,
                                    fieldLabel: 'Оплачено',
                                    labelWidth: 70,
                                    name: 'oplacheno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 455,
                                    y: 100,
                                    width: 155,
                                    fieldLabel: 'в т.ч. льг',
                                    labelWidth: 70,
                                    name: 'lg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 455,
                                    y: 70,
                                    width: 155,
                                    fieldLabel: 'в т.ч субс',
                                    labelWidth: 70,
                                    name: 'subsidia',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 140,
                                    y: 65,
                                    width: 125,
                                    fieldLabel: 'Электр',
                                    labelWidth: 55,
                                    name: 'energy',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 140,
                                    y: 95,
                                    width: 125,
                                    fieldLabel: 'Перер',
                                    labelWidth: 55,
                                    name: 'perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 285,
                                    y: 0,
                                    height: 115,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 145,
                                    title: 'Бюджет',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 124,
                                            fieldLabel: 'кВт-ч',
                                            labelWidth: 55,
                                            name: 'kwh_lg',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Бюджет',
                                            labelWidth: 55,
                                            name: 'budjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Перер',
                                            labelWidth: 55,
                                            name: 'pbudjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'textfield',
                                    x: 0,
                                    y: 135,
                                    width: 655,
                                    fieldLabel: 'инфо перер',
                                    name: 'info',
                                    fieldStyle: 'background-color:#F0F8FF;'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 0,
                                    y: 165,
                                    width: 655,
                                    fieldLabel: 'инфо бюджет',
                                    name: 'msq_lgota',
                                    fieldStyle: 'background-color:#F0F8FF;'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var grNach = Ext.getCmp('grNachEnergy');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        grNach.getView().getSelectionModel().clearSelections();
                                        grNach.getView().getSelectionModel().select(ind);
                                    },
                                    x: 625,
                                    y: 45,
                                    formBind: true,
                                    height: 30,
                                    id: 'btnaAppEnergyReset',
                                    width: 30,
                                    icon: 'resources/css/images/ico/refresh.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Восстановить'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        //this.up('#winAddVodomer').close();
                                        var form = button.findParentByType('form').getForm();
                                        //form.reset();
                                        var zadol = form.findField('zadol').getValue();
                                        var tarif = form.findField('tarif').getValue();
                                        var kwh = form.findField('kwh').getValue();
                                        var kwhn = form.findField('kwhn').getValue();

                                        var gkub_lg = form.findField('kwh_lg').getValue();
                                        var people = form.findField('people').getValue();
                                        var perer = form.findField('perer').getValue();
                                        var budjet = form.findField('budjet').getValue();
                                        var pbudjet = form.findField('pbudjet').getValue();
                                        var oplacheno = form.findField('oplacheno').getValue();

                                        var nachisleno =0;
                                        var norma = 0;
                                        var energy = 0;

                                        if ((tarif===0)  &&  (kwh > 0 || kwhn > 0)) {
                                            Ext.MessageBox.show({
                                                title: 'Проверка тарифа',
                                                msg: 'Введите тариф по услуге',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        } else {
                                            if (kwh >0 ) {
                                                energy = kwh * tarif - budjet ;
                                                norma = 0 ;
                                            } else if (kwhn >0 ) {
                                                norma = kwhn * tarif - budjet ;
                                                energy = 0;
                                            } else {
                                                norma = 0;
                                                energy = 0;
                                            }
                                            nachisleno = energy + perer + norma  ;
                                            form.findField('energy').setValue(energy);
                                            form.findField('norma').setValue(norma);
                                            form.findField('nachisleno').setValue(nachisleno);
                                            form.findField('dolg').setValue(zadol + nachisleno - oplacheno);
                                        }
                                    },
                                    x: 625,
                                    y: 85,
                                    formBind: true,
                                    height: 30,
                                    id: 'btnEnergyAppPerer',
                                    width: 30,
                                    icon: 'resources/css/images/ico/schet.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Просчитать'
                                },
                                {
                                    xtype: 'button',
                                    x: 625,
                                    y: 5,
                                    id: 'printRaspechatakaEnergy',
                                    icon: 'resources/css/images/ico/printer24.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Печать расчетного листка',
                                    tooltipType: 'title'
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'form',
                    height: 536,
                    id: 'tabFmAppVoda',
                    layout: 'absolute',
                    title: 'Хвода',
                    tabConfig: {
                        xtype: 'tab',
                        tabIndex: 3
                    },
                    items: [
                        {
                            xtype: 'fieldset',
                            x: 235,
                            y: 55,
                            height: 190,
                            style: 'background-color: #DCDCDC;',
                            width: 140,
                            title: 'Сальдо',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 119,
                                    fieldLabel: 'Сальдо на начало',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 119,
                                    fieldLabel: 'Сальдо на конец',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppVodaIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachVoda');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        //console.log();

                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'VodaApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);

                                                    }else{
                                                        form.getForm().reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    height: 30,
                                    id: 'btnVodaAppIns',
                                    margin: '10 0 0 0',
                                    width: 100,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записать'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 385,
                            y: 10,
                            height: 245,
                            style: 'background-color: #DCDCDC;',
                            width: 695,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'fieldset',
                                    anchor: '',
                                    x: 5,
                                    y: 5,
                                    height: 170,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 150,
                                    title: 'По счетчикам',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 115,
                                            fieldLabel: 'тариф',
                                            labelWidth: 55,
                                            name: 'tarif',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 115,
                                            fieldLabel: 'Куб Хв',
                                            labelWidth: 55,
                                            name: 'xkub',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Хвода',
                                            labelWidth: 55,
                                            name: 'xvoda',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    anchor: '',
                                    x: 160,
                                    y: 5,
                                    height: 170,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 150,
                                    title: 'По  норме',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 115,
                                            fieldLabel: 'человек',
                                            labelWidth: 55,
                                            name: 'people',
                                            value: 0.00,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 115,
                                            fieldLabel: 'кубов',
                                            labelWidth: 55,
                                            name: 'kubn',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 115,
                                            fieldLabel: 'кубов пер',
                                            labelWidth: 65,
                                            name: 'pkub',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Норма',
                                            labelWidth: 55,
                                            name: 'norma',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var grNach = Ext.getCmp('grNachVoda');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        grNach.getView().getSelectionModel().clearSelections();
                                        grNach.getView().getSelectionModel().select(ind);
                                    },
                                    x: 60,
                                    y: 195,
                                    formBind: true,
                                    height: 30,
                                    id: 'btnVodaAppReset',
                                    width: 30,
                                    icon: 'resources/css/images/ico/refresh.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Восстановить'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        //this.up('#winAddVodomer').close();
                                        var form = button.findParentByType('form').getForm();
                                        //form.reset();
                                        var zadol = form.findField('zadol').getValue();
                                        var tarif = form.findField('tarif').getValue();
                                        var xkub = form.findField('xkub').getValue();
                                        var xkub_lg = form.findField('xkub_lg').getValue();
                                        var people = form.findField('people').getValue();
                                        var perer = form.findField('perer').getValue();
                                        var budjet = form.findField('budjet').getValue();
                                        var xol_voda = form.findField('xvoda').getValue();
                                        var pbudjet = form.findField('pbudjet').getValue();
                                        var oplacheno = form.findField('oplacheno').getValue();

                                        var nachisleno =0;
                                        var norma = 0;
                                        var xvoda = 0;
                                        var gvoda = 0;
                                        //console.log(1);
                                        if ((tarif===0)  &&  (xkub > 0  ||  people > 0)) {
                                            Ext.MessageBox.show({
                                                title: 'Проверка тарифа',
                                                msg: 'Введите тариф по услуге',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        } else {
                                            if (xkub >0 ){
                                                xvoda = xkub * tarif - budjet ;
                                                norma = 0 ;

                                            } else if (people >0 ) {
                                                norma = people * tarif -budjet;
                                                xvoda = 0 ;
                                            } else {
                                                norma = 0;
                                                xvoda = 0 ;
                                            }
                                            nachisleno =xvoda +  perer + norma ;
                                            form.findField('xvoda').setValue(xvoda);
                                            form.findField('norma').setValue(norma);
                                            form.findField('nachisleno').setValue(nachisleno);
                                            form.findField('dolg').setValue(zadol + nachisleno - oplacheno);
                                        }
                                    },
                                    x: 120,
                                    y: 195,
                                    formBind: true,
                                    height: 30,
                                    id: 'btnVodaAppPerer',
                                    width: 30,
                                    icon: 'resources/css/images/ico/schet.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Просчитать'
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 315,
                                    y: 5,
                                    height: 175,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 150,
                                    title: 'Бюджет',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 130,
                                            fieldLabel: 'Кубов Хв',
                                            labelWidth: 65,
                                            name: 'xkub_lg',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Перер',
                                            labelWidth: 55,
                                            name: 'pbudjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Бюджет',
                                            labelWidth: 55,
                                            name: 'budjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Оплата',
                                            labelWidth: 55,
                                            name: 'lg',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 470,
                                    y: 5,
                                    height: 175,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 175,
                                    title: 'Итого',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 135,
                                            fieldLabel: 'Тариф пер',
                                            labelWidth: 70,
                                            name: 'ptarif',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Перер',
                                            labelWidth: 70,
                                            name: 'perer',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 140,
                                            fieldLabel: 'Начислено',
                                            labelWidth: 70,
                                            name: 'nachisleno',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 145,
                                            fieldLabel: 'Оплачено',
                                            labelWidth: 70,
                                            name: 'oplacheno',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 145,
                                            fieldLabel: 'в т.ч.субс',
                                            labelWidth: 70,
                                            name: 'subsidia',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'textfield',
                                    x: 175,
                                    y: 185,
                                    width: 495,
                                    fieldLabel: 'инфо перер',
                                    name: 'info',
                                    fieldStyle: 'background-color:#F0F8FF;'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 175,
                                    y: 210,
                                    width: 495,
                                    fieldLabel: 'инфо бюджет',
                                    name: 'msq_lgota',
                                    fieldStyle: 'background-color:#F0F8FF;'
                                },
                                {
                                    xtype: 'button',
                                    x: 5,
                                    y: 195,
                                    id: 'printRaspechatakaVoda',
                                    icon: 'resources/css/images/ico/printer24.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Печать расчетного листка',
                                    tooltipType: 'title'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 0,
                            y: 0,
                            height: 490,
                            id: 'grNachVoda',
                            scrollable: true,
                            width: 225,
                            title: 'Период начисления',
                            store: 'StTekNachApp',
                            viewConfig: {
                                height: 423,
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 80,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'месяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 80,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'Долг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var values =stUser.getAt(0);
                                        var form = tool.findParentByType('form');

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AddAddressNachislVoda'
                                        };

                                        //Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(params,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'VodaApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        if(results.success === "1"){
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                        }else{
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                            Ext.MessageBox.show({title: 'Ввод данных',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    tooltip: 'добавить запись',
                                    type: 'plus'
                                },
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'VodaAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'search'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 235,
                            y: 260,
                            height: 230,
                            id: 'grLgotaNachVoda',
                            scrollable: true,
                            width: 830,
                            title: 'начисление на бюджет',
                            store: 'StLgotaNachVoda',
                            viewConfig: {
                                height: 178,
                                emptyText: 'Начислений по льготе нет'
                            },
                            columns: [
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var pr = r.get('pr');
                                                if (pr === 0 ) {
                                                    metaData = 'x-grid-center-icon';
                                                } else if (pr === 1   ){
                                                    metaData = 'x-hide-display';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'addLgotaVodaPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/add.png',
                                            tooltip: 'Добавить перерасчет по льготе'
                                        },
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');

                                                if (pr === 0 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ((pr === 1) && (check_date === tek_date) ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppVoda');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaVodaPerer"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachVoda');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете перерасчет по воде на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'VodaApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по Воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/delete.png',
                                            tooltip: 'Удалить перерасчет по льготе'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'sdata',
                                    menuDisabled: true,
                                    text: 'дата с',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'fdata',
                                    menuDisabled: true,
                                    text: 'дата по',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 120,
                                    dataIndex: 'fio',
                                    menuDisabled: true,
                                    text: 'Ф.И.О'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 130,
                                    dataIndex: 'lgota',
                                    menuDisabled: true,
                                    text: 'Льгота',
                                    tooltip: 'name'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 35,
                                    align: 'center',
                                    dataIndex: 'percent',
                                    menuDisabled: true,
                                    text: '%',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 44,
                                    align: 'center',
                                    dataIndex: 'people',
                                    menuDisabled: true,
                                    text: 'чел',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 60,
                                    align: 'right',
                                    dataIndex: 'tarif',
                                    menuDisabled: true,
                                    text: 'тариф',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 69,
                                    align: 'right',
                                    dataIndex: 'qty',
                                    menuDisabled: true,
                                    text: 'куб',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 74,
                                    align: 'right',
                                    dataIndex: 'budjet',
                                    menuDisabled: true,
                                    text: 'бюджет'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 40,
                                    dataIndex: 'pr',
                                    menuDisabled: true,
                                    text: 'пр',
                                    format: '0'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'editLgotaVoda'});
                                                stUser.sync();

                                                form.down('#btAddLgotaPerer').setText('Обновить запись');
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/edit.png',
                                            tooltip: 'Редактировать запись'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');
                                                if (pr === 1 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ( (pr === 0)   ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppVoda');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaVoda"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachVoda');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'VodaApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/no.png',
                                            tooltip: 'Удалить  запись '
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'info',
                                    menuDisabled: true,
                                    text: 'инфо',
                                    tooltip: 'name'
                                }
                            ],
                            features: [
                                {
                                    ftype: 'summary'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                        var gridNachisl = Ext.getCmp('grNachVoda');

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);

                                        var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                        var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                        var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);
                                        //console.log(valueNachisl);


                                        if (value !==undefined && valueNachisl !==undefined ){
                                            var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                            var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                            var dt = new Date();
                                            var dt_nach = new Date(valueNachisl.get('data'));
                                            var check_date = Ext.Date.format(dt, 'Y-m');
                                            var date_check = Ext.Date.format(dt_nach, 'Y-m');
                                            // console.log(dt);
                                            //console.log(dt_nach);
                                            form.getForm().findField('m2').hide();
                                            form.getForm().findField('gkm2').hide();

                                            winAddLgotaPerer.setTitle('Добавление записи на бюджет');
                                            var pr = form.getForm().findField('checkType').getValue();
                                            //console.log(pr);

                                            if (pr === true ) {
                                                values.set({'vibor':'addLgotaVoda'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('xkub_lg') + valueNachisl.get('gkub_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("0");
                                                form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            } else {

                                                values.set({'vibor':'addLgotaVodaPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('xkub_lg') + valueNachisl.get('gkub_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("1");
                                                form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            }

                                        } else{
                                            Ext.MessageBox.show({
                                                title: 'Добавлениезаписи начисления  на бюджет',
                                                msg: 'Не выбран льготчик',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        }
                                    },
                                    tooltip: 'добавить начисление по льготнику',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'datefield',
                            x: 230,
                            y: 5,
                            border: '0px',
                            margin: '10 0 10 0',
                            width: 150,
                            fieldLabel: 'Период начислен',
                            hideLabel: true,
                            labelAlign: 'top',
                            labelWidth: 50,
                            name: 'data',
                            fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                            hideTrigger: true,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd'
                        }
                    ]
                },
                {
                    xtype: 'form',
                    id: 'tabFmAppStoki',
                    layout: 'absolute',
                    title: 'Гвода',
                    items: [
                        {
                            xtype: 'gridpanel',
                            x: 5,
                            y: 5,
                            height: 490,
                            id: 'grNachStoki',
                            scrollable: true,
                            width: 225,
                            title: 'Период начисления',
                            store: 'StTekNachApp',
                            viewConfig: {
                                height: 423,
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 80,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'месяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 80,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'Долг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var values =stUser.getAt(0);
                                        var form = tool.findParentByType('form');

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AddAddressNachislStoki'
                                        };

                                        //Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(params,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'StokiApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        if(results.success === "1"){
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                        }else{
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                            Ext.MessageBox.show({title: 'Ввод данных',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    tooltip: 'добавить запись',
                                    type: 'plus'
                                },
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'StokiAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'search'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 240,
                            y: 275,
                            height: 240,
                            id: 'grLgotaNachStoki',
                            scrollable: true,
                            width: 835,
                            title: 'начисление на бюджет',
                            store: 'StLgotaNachVoda',
                            viewConfig: {
                                emptyText: 'Начислений по льготе нет'
                            },
                            columns: [
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var pr = r.get('pr');
                                                if (pr === 0 ) {
                                                    metaData = 'x-grid-center-icon';
                                                } else if (pr === 1   ){
                                                    metaData = 'x-hide-display';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'addLgotaStokiPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/add.png',
                                            tooltip: 'Добавить перерасчет по льготе'
                                        },
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');

                                                if (pr === 0 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ((pr === 1) && (check_date === tek_date) ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppStoki');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaStokiPerer"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachStoki');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете перерасчет по стокам на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по стокам на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'StokiApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по стокам на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/delete.png',
                                            tooltip: 'Удалить перерасчет по льготе'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'sdata',
                                    menuDisabled: true,
                                    text: 'дата с',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'fdata',
                                    menuDisabled: true,
                                    text: 'дата по',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 120,
                                    dataIndex: 'fio',
                                    menuDisabled: true,
                                    text: 'Ф.И.О'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 130,
                                    dataIndex: 'lgota',
                                    menuDisabled: true,
                                    text: 'Льгота',
                                    tooltip: 'name'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 35,
                                    align: 'center',
                                    dataIndex: 'percent',
                                    menuDisabled: true,
                                    text: '%',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 45,
                                    align: 'center',
                                    dataIndex: 'people',
                                    menuDisabled: true,
                                    text: 'чел',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 60,
                                    align: 'right',
                                    dataIndex: 'tarif',
                                    menuDisabled: true,
                                    text: 'тариф',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 71,
                                    align: 'right',
                                    dataIndex: 'qty',
                                    menuDisabled: true,
                                    text: 'куб',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 74,
                                    align: 'right',
                                    dataIndex: 'budjet',
                                    menuDisabled: true,
                                    text: 'бюджет'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 40,
                                    dataIndex: 'pr',
                                    menuDisabled: true,
                                    text: 'пр',
                                    format: '0'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'editLgotaStoki'});
                                                stUser.sync();

                                                form.down('#btAddLgotaPerer').setText('Обновить запись');
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/edit.png',
                                            tooltip: 'Редактировать запись'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');
                                                if (pr === 1 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ( (pr === 0)){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");


                                                var form = Ext.getCmp('tabFmAppStoki');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaStoki"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachStoki');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете начисление по стокам на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисление по стокам на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'StokiApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);

                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по стокам на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/no.png',
                                            tooltip: 'Удалить  запись '
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'info',
                                    menuDisabled: true,
                                    text: 'инфо',
                                    tooltip: 'name'
                                }
                            ],
                            features: [
                                {
                                    ftype: 'summary'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                        var gridNachisl = Ext.getCmp('grNachStoki');

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);

                                        var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                        var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                        var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);

                                        if (value !==undefined && valueNachisl !==undefined ){
                                            var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                            var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                            var dt = new Date();
                                            var dt_nach = new Date(valueNachisl.get('data'));
                                            var check_date = Ext.Date.format(dt, 'Y-m');
                                            var date_check = Ext.Date.format(dt_nach, 'Y-m');

                                            form.getForm().findField('m2').hide();
                                            form.getForm().findField('gkm2').hide();
                                            winAddLgotaPerer.setTitle('Добавление записи на бюджет');
                                            if (check_date === date_check ) {

                                                values.set({'vibor':'addLgotaStoki'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('xkub_lg') + valueNachisl.get('gkub_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("0");
                                                form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            } else {

                                                values.set({'vibor':'addLgotaStokiPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('xkub_lg') + valueNachisl.get('gkub_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("1");
                                                form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            }

                                        } else{
                                            Ext.MessageBox.show({
                                                title: 'Добавлениезаписи начисления  на бюджет',
                                                msg: 'Не выбран льготчик',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        }
                                    },
                                    tooltip: 'добавить начисление по льготнику',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 240,
                            y: 60,
                            height: 175,
                            style: 'background-color: #DCDCDC;',
                            width: 140,
                            title: '',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на начало',
                                    labelAlign: 'top',
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на конец',
                                    labelAlign: 'top',
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppStokiIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachStoki');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'StokiApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);

                                                    }else{
                                                        form.reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });
                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    id: 'btnStokiAppIns',
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записать'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldcontainer',
                            x: 385,
                            y: 10,
                            height: 255,
                            style: 'background-color: #DCDCDC;',
                            width: 690,
                            layout: 'absolute',
                            fieldLabel: 'Начислено, грн',
                            labelAlign: 'top',
                            items: [
                                {
                                    xtype: 'fieldset',
                                    anchor: '',
                                    x: 15,
                                    y: 5,
                                    height: 170,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 150,
                                    title: 'По счетчикам',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'тариф',
                                            labelWidth: 55,
                                            name: 'tarif',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Куб Гв',
                                            labelWidth: 55,
                                            name: 'xkub',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Гвода',
                                            labelWidth: 55,
                                            name: 'xvoda',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    anchor: '',
                                    x: 175,
                                    y: 5,
                                    height: 145,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 150,
                                    title: 'По  норме',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'человек',
                                            labelWidth: 55,
                                            name: 'people',
                                            value: 0.00,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'кубов',
                                            labelWidth: 55,
                                            name: 'kubn',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'кубов пер',
                                            labelWidth: 65,
                                            name: 'pkub',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Норма',
                                            labelWidth: 55,
                                            name: 'norma',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 335,
                                    y: 5,
                                    height: 145,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 150,
                                    title: 'Бюджет',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Кубов Гв',
                                            labelWidth: 65,
                                            name: 'xkub_lg',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Перер',
                                            labelWidth: 55,
                                            name: 'pbudjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Бюджет',
                                            labelWidth: 55,
                                            name: 'budjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 495,
                                    y: 5,
                                    height: 145,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 175,
                                    title: 'Итого',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Тариф пер',
                                            labelWidth: 70,
                                            name: 'ptarif',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Перер',
                                            labelWidth: 70,
                                            name: 'perer',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Начислено',
                                            labelWidth: 70,
                                            name: 'nachisleno',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Оплачено',
                                            labelWidth: 70,
                                            name: 'oplacheno',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'textfield',
                                    x: 175,
                                    y: 160,
                                    width: 495,
                                    fieldLabel: 'инфо перер',
                                    name: 'info',
                                    fieldStyle: 'background-color:#F0F8FF;'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 175,
                                    y: 190,
                                    width: 495,
                                    fieldLabel: 'инфо бюджет',
                                    name: 'msq_lgota',
                                    fieldStyle: 'background-color:#F0F8FF;'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var grNach = Ext.getCmp('grNachStoki');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        grNach.getView().getSelectionModel().clearSelections();
                                        grNach.getView().getSelectionModel().select(ind);
                                    },
                                    x: 65,
                                    y: 185,
                                    formBind: true,
                                    id: 'btnStokiAppReset',
                                    icon: 'resources/css/images/ico/refresh.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Восстановить'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        //this.up('#winAddVodomer').close();
                                        var form = button.findParentByType('form').getForm();
                                        //form.reset();
                                        var zadol = form.findField('zadol').getValue();
                                        var tarif = form.findField('tarif').getValue();
                                        var xkub = form.findField('xkub').getValue();
                                        var xkub_lg = form.findField('xkub_lg').getValue();
                                        var people = form.findField('people').getValue();
                                        var perer = form.findField('perer').getValue();
                                        var budjet = form.findField('budjet').getValue();
                                        var xol_voda = form.findField('xvoda').getValue();
                                        var pbudjet = form.findField('pbudjet').getValue();
                                        var oplacheno = form.findField('oplacheno').getValue();

                                        var nachisleno =0;
                                        var norma = 0;
                                        var xvoda = 0;

                                        if ((tarif===0)  &&  (xkub > 0  || people > 0)) {
                                            Ext.MessageBox.show({
                                                title: 'Проверка тарифа',
                                                msg: 'Введите тариф по услуге',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        } else {
                                            if (xkub >0 ){
                                                xvoda = xkub * tarif - budjet ;
                                                norma = 0 ;

                                            } else if (people >0 ) {
                                                norma = people * tarif -budjet;
                                                xvoda = 0 ;
                                            } else {
                                                norma = 0;
                                                xvoda = 0 ;
                                            }
                                            nachisleno =xvoda +  perer + norma;
                                            form.findField('xvoda').setValue(xvoda);
                                            form.findField('norma').setValue(norma);
                                            form.findField('nachisleno').setValue(nachisleno);
                                            form.findField('dolg').setValue(zadol + nachisleno - oplacheno);
                                        }
                                    },
                                    x: 115,
                                    y: 185,
                                    formBind: true,
                                    id: 'btnStokiAppPerer',
                                    icon: 'resources/css/images/ico/schet.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Просчитать'
                                }
                            ]
                        },
                        {
                            xtype: 'datefield',
                            x: 230,
                            y: 5,
                            border: '0px',
                            margin: '10 0 10 0',
                            width: 150,
                            fieldLabel: 'Период начислен',
                            hideLabel: true,
                            labelAlign: 'top',
                            labelWidth: 50,
                            name: 'data',
                            fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                            hideTrigger: true,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd'
                        }
                    ],
                    tabConfig: {
                        xtype: 'tab',
                        tabIndex: 4
                    }
                },
                {
                    xtype: 'form',
                    id: 'tabFmAppPtn',
                    layout: 'absolute',
                    title: 'ПТН',
                    items: [
                        {
                            xtype: 'gridpanel',
                            x: 0,
                            y: 0,
                            height: 490,
                            id: 'grNachPtn',
                            scrollable: true,
                            width: 225,
                            title: 'Период начисления',
                            store: 'StTekNachApp',
                            viewConfig: {
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 80,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'месяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 80,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'Долг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'PodogrevAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 240,
                            y: 280,
                            height: 260,
                            id: 'grLgotaNachPtn',
                            scrollable: true,
                            width: 825,
                            title: 'начисление на бюджет',
                            store: 'StLgotaNachVoda',
                            viewConfig: {
                                emptyText: 'Начислений по льготе нет'
                            },
                            columns: [
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var pr = r.get('pr');
                                                if (pr === 0 ) {
                                                    metaData = 'x-grid-center-icon';
                                                } else if (pr === 1   ){
                                                    metaData = 'x-hide-display';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'addLgotaPtnPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                form.getForm().findField('gkal').hide();

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/add.png',
                                            tooltip: 'Добавить перерасчет по льготе'
                                        },
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');

                                                if (pr === 0 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ((pr === 1) && (check_date === tek_date) ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppPtn');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaPtnPerer"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachPtn');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете перерасчет по птн на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по птн на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'PtnApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по птн на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/delete.png',
                                            tooltip: 'Удалить перерасчет по льготе'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'sdata',
                                    menuDisabled: true,
                                    text: 'дата с',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'fdata',
                                    menuDisabled: true,
                                    text: 'дата по',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 120,
                                    dataIndex: 'fio',
                                    menuDisabled: true,
                                    text: 'Ф.И.О'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 130,
                                    dataIndex: 'lgota',
                                    menuDisabled: true,
                                    text: 'Льгота',
                                    tooltip: 'name'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 35,
                                    align: 'center',
                                    dataIndex: 'percent',
                                    menuDisabled: true,
                                    text: '%',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 44,
                                    align: 'center',
                                    dataIndex: 'people',
                                    menuDisabled: true,
                                    text: 'чел',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 81,
                                    align: 'right',
                                    dataIndex: 'tarif',
                                    menuDisabled: true,
                                    text: 'тариф',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 74,
                                    align: 'right',
                                    dataIndex: 'qty',
                                    menuDisabled: true,
                                    text: 'S (м&sup2;)',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 74,
                                    align: 'right',
                                    dataIndex: 'budjet',
                                    menuDisabled: true,
                                    text: 'бюджет'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 40,
                                    dataIndex: 'pr',
                                    menuDisabled: true,
                                    text: 'пр',
                                    format: '0'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'editLgotaPtn'});
                                                stUser.sync();

                                                form.down('#btAddLgotaPerer').setText('Обновить запись');
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                form.getForm().findField('gkal').hide();

                                                winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/edit.png',
                                            tooltip: 'Редактировать запись'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');
                                                if (pr === 1 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ( (pr === 0)  ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppPtn');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaPtn"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachPtn');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по птн на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'PtnApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления  на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/no.png',
                                            tooltip: 'Удалить  запись '
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'info',
                                    menuDisabled: true,
                                    text: 'инфо',
                                    tooltip: 'name'
                                }
                            ],
                            features: [
                                {
                                    ftype: 'summary'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                        var gridNachisl = Ext.getCmp('grNachPtn');

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);

                                        var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                        var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                        var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);

                                        if (value !==undefined && valueNachisl !==undefined ){
                                            var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                            var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                            var dt = new Date();
                                            var dt_nach = new Date(valueNachisl.get('data'));
                                            var check_date = Ext.Date.format(dt, 'Y-m');
                                            var date_check = Ext.Date.format(dt_nach, 'Y-m');
                                            form.getForm().findField('m2').hide();
                                            form.getForm().findField('gkm2').hide();
                                            form.getForm().findField('gkal').hide();

                                            winAddLgotaPerer.setTitle('Добавление записи на бюджет');

                                            var pr = form.getForm().findField('checkType').getValue();
                                            //console.log(pr);

                                            if (pr === true ) {
                                                values.set({'vibor':'addLgotaPtn'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif_m2'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('square_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("0");
                                                form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            } else {

                                                values.set({'vibor':'addLgotaPtnPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif_m2'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('square_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("1");
                                                form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            }


                                        } else{
                                            Ext.MessageBox.show({
                                                title: 'Добавлениезаписи начисления  на бюджет',
                                                msg: 'Не выбран льготчик',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        }
                                    },
                                    tooltip: 'добавить начисление по льготнику',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'datefield',
                            x: 240,
                            y: 0,
                            border: '0px',
                            margin: '10 0 10 0',
                            width: 150,
                            fieldLabel: 'Период начислен',
                            hideLabel: true,
                            labelAlign: 'top',
                            labelWidth: 50,
                            name: 'data',
                            fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                            hideTrigger: true,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd'
                        },
                        {
                            xtype: 'fieldset',
                            x: 240,
                            y: 45,
                            height: 225,
                            style: 'background-color: #DCDCDC;',
                            width: 140,
                            title: 'Сальдо',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 119,
                                    fieldLabel: 'Сальдо на начало',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 119,
                                    fieldLabel: 'Сальдо на конец',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppPtnIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachPtn');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'PtnApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);
                                                    }else{
                                                        form.reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    height: 30,
                                    id: 'btnPtnAppIns',
                                    margin: '10 0 0 0',
                                    width: 90,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записать'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 400,
                            y: 5,
                            height: 265,
                            style: 'background-color: #DCDCDC;',
                            width: 660,
                            layout: 'absolute',
                            title: 'Начислено, грн',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    width: 195,
                                    fieldLabel: 'тариф',
                                    name: 'tarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 0,
                                    y: 30,
                                    width: 195,
                                    fieldLabel: 'тариф  (м&sup2;)',
                                    name: 'tarif_m2',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 4
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 0,
                                    y: 60,
                                    width: 195,
                                    fieldLabel: 'Площадь (м&sup2;)',
                                    name: 'square',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 0,
                                    y: 120,
                                    width: 230,
                                    fieldLabel: 'Q квартиры',
                                    name: 'gkal',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 6
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 0,
                                    y: 210,
                                    width: 195,
                                    fieldLabel: 'Начислено',
                                    name: 'nachisleno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 0,
                                    y: 90,
                                    width: 230,
                                    fieldLabel: 'Гкал/час (м&sup2;)',
                                    name: 'gkm2',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 13
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 0,
                                    y: 150,
                                    width: 195,
                                    fieldLabel: 'П.Т.Н.',
                                    name: 'ptn',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 0,
                                    y: 180,
                                    width: 195,
                                    fieldLabel: 'Перер',
                                    name: 'perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 245,
                                    y: 0,
                                    height: 115,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 185,
                                    title: 'Бюджет',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 124,
                                            fieldLabel: 'Sльг (м&sup2;)',
                                            labelWidth: 80,
                                            name: 'square_lg',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true,
                                            decimalPrecision: 0
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Бюджет',
                                            labelWidth: 80,
                                            name: 'budjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'Перер',
                                            labelWidth: 80,
                                            name: 'pbudjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 445,
                                    y: -1,
                                    height: 115,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 185,
                                    title: 'Оплачено',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 124,
                                            fieldLabel: 'Сумма',
                                            labelWidth: 80,
                                            name: 'oplacheno',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'В т.ч. субс',
                                            labelWidth: 80,
                                            name: 'subsidia',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            width: 125,
                                            fieldLabel: 'В т.ч. льг',
                                            labelWidth: 80,
                                            name: 'lg',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'textfield',
                                    x: 255,
                                    y: 210,
                                    width: 380,
                                    fieldLabel: 'инфо перер',
                                    name: 'info',
                                    fieldStyle: 'background-color:#F0F8FF;'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 255,
                                    y: 180,
                                    width: 380,
                                    fieldLabel: 'инфо бюджет',
                                    name: 'msq_lgota',
                                    fieldStyle: 'background-color:#F0F8FF;'
                                },
                                {
                                    xtype: 'button',
                                    x: 465,
                                    y: 125,
                                    id: 'printRaspechatakaPtn',
                                    icon: 'resources/css/images/ico/printer24.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Печать расчетного листка',
                                    tooltipType: 'title'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var grNach = Ext.getCmp('grNachPtn');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        grNach.getView().getSelectionModel().clearSelections();
                                        grNach.getView().getSelectionModel().select(ind);
                                    },
                                    x: 525,
                                    y: 125,
                                    formBind: true,
                                    height: 30,
                                    id: 'btnaAppPtnReset',
                                    width: 30,
                                    icon: 'resources/css/images/ico/refresh.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Восстановить'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        //this.up('#winAddVodomer').close();
                                        var form = button.findParentByType('form').getForm();
                                        //form.reset();
                                        var zadol = form.findField('zadol').getValue();
                                        var tarif = form.findField('tarif').getValue();
                                        var gkm2 = form.findField('gkm2').getValue();
                                        var square = form.findField('square').getValue();
                                        var perer = form.findField('perer').getValue();
                                        var budjet = form.findField('budjet').getValue();
                                        var pbudjet = form.findField('pbudjet').getValue();
                                        var oplacheno = form.findField('oplacheno').getValue();

                                        var nachisleno =0;
                                        var ptn = 0;
                                        var tarif_m2 = 0;

                                        if ((tarif===0)  &&  (square > 0 || gkm2 > 0)) {
                                            Ext.MessageBox.show({
                                                title: 'Проверка тарифа',
                                                msg: 'Введите тариф по услуге',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        } else {
                                            ptn = gkm2 * tarif * square ;
                                            tarif_m2 = gkm2 * tarif ;

                                            nachisleno = ptn + perer- budjet + pbudjet;
                                            form.findField('ptn').setValue(ptn);
                                            form.findField('tarif_m2').setValue(tarif_m2);
                                            form.findField('nachisleno').setValue(nachisleno);
                                            form.findField('dolg').setValue(zadol + nachisleno - oplacheno);
                                        }
                                    },
                                    x: 580,
                                    y: 125,
                                    formBind: true,
                                    height: 30,
                                    id: 'btnPtnAppPerer',
                                    width: 30,
                                    icon: 'resources/css/images/ico/schet.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Просчитать'
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'form',
                    id: 'tabFmAppOtoplenie',
                    layout: 'absolute',
                    title: 'Отопление',
                    items: [
                        {
                            xtype: 'fieldset',
                            x: 365,
                            y: 10,
                            height: 320,
                            style: 'background-color: #DCDCDC;',
                            width: 195,
                            title: 'Начислено, грн',
                            items: [
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    fieldLabel: 'метод',
                                    labelWidth: 50,
                                    name: 'metod'
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 135,
                                    fieldLabel: 'тариф   (м&sup2;)',
                                    labelWidth: 90,
                                    name: 'tarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 133,
                                    fieldLabel: 'Площадь (м&sup2;)',
                                    labelWidth: 90,
                                    name: 'square',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Гкал (м&sup2;)',
                                    labelWidth: 90,
                                    name: 'gkalm2',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 7
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 136,
                                    fieldLabel: 'Начисл (м&sup2;)',
                                    labelWidth: 90,
                                    name: 'otoplenie',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 135,
                                    fieldLabel: 'тариф (гкал)',
                                    labelWidth: 90,
                                    name: 'tarif_gkal',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Начисл (гкал)',
                                    labelWidth: 90,
                                    name: 'otoplenie_gkal',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Гкал /м&sup2;',
                                    labelWidth: 90,
                                    name: 'gkm2',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 7
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Гкал',
                                    labelWidth: 90,
                                    name: 'gkal',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 6
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Начислено',
                                    labelWidth: 90,
                                    name: 'nachisleno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 0,
                            y: 0,
                            height: 330,
                            id: 'grNachOtoplenie',
                            scrollable: true,
                            width: 210,
                            title: 'Период начисления',
                            store: 'StTekNachApp',
                            viewConfig: {
                                height: 458,
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'месяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 75,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'Долг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var values =stUser.getAt(0);
                                        var form = tool.findParentByType('form');

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AddAddressNachislOtoplenie'
                                        };

                                        //Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(params,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'OtoplenieApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        if(results.success === "1"){
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                        }else{
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                            Ext.MessageBox.show({title: 'Ввод данных',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    tooltip: 'добавить запись',
                                    type: 'plus'
                                },
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'OtoplenieAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'search'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 5,
                            y: 340,
                            height: 185,
                            id: 'grLgotaNachOtoplenie',
                            scrollable: true,
                            width: 1080,
                            title: 'начисление на бюджет',
                            store: 'StLgotaNachVoda',
                            viewConfig: {
                                emptyText: 'Начислений по льготе нет'
                            },
                            columns: [
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');

                                                if (pr === 0 ) {
                                                    metaData = 'x-grid-center-icon';
                                                } else if (pr === 1 ){
                                                    metaData = 'x-hide-display';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;
                                                var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                                rbgTypeNachVoda.hide();
                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'addLgotaOtopleniePerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/add.png',
                                            tooltip: 'Добавить перерасчет по льготе'
                                        },
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');

                                                if (pr === 0 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ((pr === 1) && (check_date === tek_date) ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppOtoplenie');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaOtopleniePerer"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNachOtoplenie = Ext.getCmp('grNachOtoplenie');
                                                var valueNachisl  = grNachOtoplenie.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNachOtoplenie.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете перерасчет по отоплению на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по отоплению на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'OtoplenieApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNachOtoplenie.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по отоплению на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/delete.png',
                                            tooltip: 'Удалить перерасчет по льготе'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'sdata',
                                    menuDisabled: true,
                                    text: 'дата с',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'fdata',
                                    menuDisabled: true,
                                    text: 'дата по',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 100,
                                    dataIndex: 'fio',
                                    menuDisabled: true,
                                    text: 'Ф.И.О'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 110,
                                    dataIndex: 'lgota',
                                    menuDisabled: true,
                                    text: 'Льгота',
                                    tooltip: 'name'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 45,
                                    align: 'center',
                                    dataIndex: 'percent',
                                    menuDisabled: true,
                                    text: '%',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 45,
                                    align: 'center',
                                    dataIndex: 'people',
                                    menuDisabled: true,
                                    text: 'чел',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 80,
                                    align: 'right',
                                    dataIndex: 'tarif',
                                    menuDisabled: true,
                                    text: 'тариф',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 90,
                                    align: 'right',
                                    dataIndex: 'gkal',
                                    menuDisabled: true,
                                    text: 'Гк_пред',
                                    format: '0.000000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 90,
                                    align: 'right',
                                    dataIndex: 'qty',
                                    menuDisabled: true,
                                    text: 'Гкал',
                                    format: '0.000000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 60,
                                    align: 'right',
                                    dataIndex: 'm2',
                                    menuDisabled: true,
                                    text: 'Sм&sup2;',
                                    format: '0.00'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 85,
                                    align: 'right',
                                    dataIndex: 'gkm2',
                                    menuDisabled: true,
                                    text: 'Гк_м&sup2;',
                                    format: '0.0000000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 80,
                                    align: 'right',
                                    dataIndex: 'budjet',
                                    menuDisabled: true,
                                    text: 'бюджет'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 40,
                                    dataIndex: 'pr',
                                    menuDisabled: true,
                                    text: 'пр',
                                    format: '0'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;
                                                var metod =value.get('metod') ;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'editLgotaOtoplenie'});
                                                stUser.sync();

                                                form.down('#btAddLgotaPerer').setText('Обновить запись');
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));

                                                winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/edit.png',
                                            tooltip: 'Редактировать запись'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 35,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');
                                                if (pr === 1 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ( (pr === 0)    ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppOtoplenie');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaOtoplenie"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachOtoplenie');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление записи по отоплению на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'OtoplenieApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/no.png',
                                            tooltip: 'Удалить  запись '
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'info',
                                    menuDisabled: true,
                                    text: 'инфо',
                                    tooltip: 'name'
                                }
                            ],
                            features: [
                                {
                                    ftype: 'summary'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                        var gridNachisl = Ext.getCmp('grNachOtoplenie');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                        var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                        var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);



                                        //console.log(valueNachisl.index);
                                        if (value !==undefined && valueNachisl !==undefined ){
                                            var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                            var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                            var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                            var dt = new Date();
                                            var dt_nach = new Date(valueNachisl.get('data'));
                                            var check_date = Ext.Date.format(dt, 'Y-m');
                                            var date_check = Ext.Date.format(dt_nach, 'Y-m');
                                            rbgTypeNachVoda.hide();
                                            winAddLgotaPerer.setTitle('Добавление записи на бюджет');

                                            var pr = form.getForm().findField('checkType').getValue();
                                            //console.log(pr);

                                            if (pr === true ) {
                                                values.set({'vibor':'addLgotaOtoplenie'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif_gkal')) ;
                                                form.getForm().findField('m2').setValue("31.5");
                                                form.getForm().findField('gkm2').setValue(valueNachisl.get('gkm2'));
                                                form.getForm().findField('qty').setValue(31.5 * valueNachisl.get('gkm2'));
                                                form.getForm().findField('summa').setValue((value.get('percent')/100)*31.5 * valueNachisl.get('tarif_gkal')* valueNachisl.get('gkm2'));
                                                form.getForm().findField('checkType').setValue("0");
                                                form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            } else {

                                                values.set({'vibor':'addLgotaOtopleniePerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif_gkal')) ;
                                                form.getForm().findField('m2').setValue("31.5");
                                                form.getForm().findField('gkm2').setValue(valueNachisl.get('gkm2'));
                                                form.getForm().findField('qty').setValue(31.5 * valueNachisl.get('gkm2'));
                                                form.getForm().findField('summa').setValue((value.get('percent')/100)*31.5 * valueNachisl.get('tarif_gkal')* valueNachisl.get('gkm2'));
                                                form.getForm().findField('checkType').setValue("1");
                                                form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            }


                                        } else{
                                            Ext.MessageBox.show({
                                                title: 'Добавлениезаписи начисления  на бюджет',
                                                msg: 'Не выбран льготчик',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        }
                                    },
                                    tooltip: 'добавить начисление по льготнику',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 215,
                            y: 50,
                            height: 280,
                            style: 'background-color: #DCDCDC;',
                            width: 145,
                            title: '',
                            toggleOnTitleClick: false,
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    padding: '10 0 0 0',
                                    fieldLabel: 'Сальдо на начало',
                                    labelAlign: 'top',
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Оплачено',
                                    labelAlign: 'top',
                                    name: 'oplacheno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'в т.ч суб',
                                    labelWidth: 60,
                                    name: 'subsidia',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'в т.ч льг',
                                    labelWidth: 60,
                                    name: 'lg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на конец',
                                    labelAlign: 'top',
                                    labelWidth: 55,
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppOtoplenieIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachOtoplenie');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        //console.log();

                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'OtoplenieApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);
                                                    }else{
                                                        form.reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });
                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    id: 'btnOtoplenieAppIns',
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записать'
                                }
                            ]
                        },
                        {
                            xtype: 'datefield',
                            x: 215,
                            y: 0,
                            border: '0px',
                            margin: '10 0 10 0',
                            width: 150,
                            fieldLabel: 'Период начислен',
                            hideLabel: true,
                            labelAlign: 'top',
                            labelWidth: 50,
                            name: 'data',
                            fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                            hideTrigger: true,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd'
                        },
                        {
                            xtype: 'fieldset',
                            x: 565,
                            y: 10,
                            height: 110,
                            style: 'background-color: #DCDCDC;',
                            width: 160,
                            title: 'МОП',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Гк/м&sup2;',
                                    labelWidth: 40,
                                    name: 'gkm2_mop',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 7
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Гкал',
                                    labelWidth: 40,
                                    name: 'gkal_mop',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 6
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Моп',
                                    labelWidth: 40,
                                    name: 'mop',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 730,
                            y: 10,
                            height: 235,
                            style: 'background-color: #DCDCDC;',
                            width: 160,
                            title: 'перерасчет',
                            items: [
                                {
                                    xtype: 'datefield',
                                    anchor: '100%',
                                    width: 150,
                                    fieldLabel: 'дата',
                                    labelWidth: 35,
                                    name: 'data_perer',
                                    format: 'F,Y',
                                    startDay: 1,
                                    submitFormat: 'Ymd',
                                    listeners: {
                                        select: 'onDatefieldSelect'
                                    }
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 150,
                                    fieldLabel: 'Тариф',
                                    labelWidth: 50,
                                    name: 'tarif_perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Гкал',
                                    labelWidth: 50,
                                    name: 'perer_gkal',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 6
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Гкал/м&sup2;',
                                    labelWidth: 50,
                                    name: 'gkm2_perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 7
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Перер',
                                    labelWidth: 50,
                                    name: 'perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppOtopleniePererIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachOtoplenie');
                                        var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                        var ind = parseInt(valueNachisl.index,0);
                                        //console.log();

                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        var newValue = value.perer_gkal;
                                        if (newValue !== 0){
                                            Ext.MessageBox.confirm({
                                                title: 'Перерасчет по квартире',
                                                msg: 'Перерасчет по отоплениию <br>Вы желаете продолжать.',
                                                buttons: Ext.MessageBox.OKCANCEL,
                                                icon: Ext.MessageBox.ERROR,
                                                buttonText:{
                                                    ok:'Да',
                                                    cancel:'отмена'
                                                },
                                                fn:function(btn,newValue){
                                                    if(btn=='ok'){
                                                        var myMask= Ext.Msg.show({
                                                            title:'Перерасчет...',
                                                            msg: 'Перерасчет по отоплению.Ожидайте...',
                                                            buttons: Ext.Msg.CANCEL,
                                                            wait: true,
                                                            modal: true,
                                                            icon: Ext.Msg.INFO
                                                        });
                                                        QueryTeplomer.newPokTeplomera(value,function(data){
                                                            if (data.success !=='0'){
                                                                StTekNachApp.load({
                                                                    params: {
                                                                        what:'OtoplenieApp',
                                                                        address_id: values.get('address_id'),
                                                                        login:values.get('login'),
                                                                        password:values.get('password')
                                                                    },
                                                                    callback: function(records,operation,success){
                                                                        if(success){
                                                                            grNach.getView().getSelectionModel().select(ind);
                                                                        }else{
                                                                            form.reset();
                                                                        }
                                                                    },
                                                                    scope:this
                                                                });
                                                                myMask.close();
                                                                Ext.MessageBox.confirm({
                                                                    title: 'Проверка вводимых данных',
                                                                    msg: data.msg,
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.INFO
                                                                });
                                                            }else{
                                                                myMask.close();
                                                            }
                                                        });
                                                    }
                                                }
                                            });
                                        }

                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    disabled: true,
                                    height: 30,
                                    id: 'btnOtopleniePererIns',
                                    width: 95,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Перерасчет Гкал'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 900,
                            y: 10,
                            height: 235,
                            style: 'background-color: #DCDCDC;',
                            width: 185,
                            title: 'По льготе',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'S_льг (м&sup2;)',
                                    labelWidth: 65,
                                    name: 'square_lg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Гкал (1м&sup2;)',
                                    labelWidth: 65,
                                    name: 'gkm2_lg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 7
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 140,
                                    fieldLabel: 'Бюд (м&sup2;)',
                                    labelWidth: 65,
                                    name: 'budjet_m2',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 140,
                                    fieldLabel: 'Бюд гкал',
                                    labelWidth: 65,
                                    name: 'budjet_gkal',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 140,
                                    fieldLabel: 'Бюд моп',
                                    labelWidth: 65,
                                    name: 'budjet_mop',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 140,
                                    fieldLabel: 'Бюджет',
                                    labelWidth: 65,
                                    name: 'budjet',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 140,
                                    fieldLabel: 'Перер',
                                    labelWidth: 65,
                                    name: 'pbudjet',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            x: 570,
                            y: 295,
                            style: 'background-color: #DCDCDC;',
                            width: 505,
                            fieldLabel: 'инфо бюджет',
                            name: 'msq_lgota'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var form = button.findParentByType('form').getForm();
                                var grNach = Ext.getCmp('grNachOtoplenie');
                                var record = grNach.getSelectionModel().getSelection()[0];
                                var ind  = grNach.getView().getStore().indexOf(record);
                                grNach.getView().getSelectionModel().clearSelections();
                                grNach.getView().getSelectionModel().select(ind);
                            },
                            x: 670,
                            y: 155,
                            formBind: true,
                            height: 30,
                            id: 'btnOtoplenieAppReset',
                            width: 30,
                            icon: 'resources/css/images/ico/refresh.png',
                            scale: 'medium',
                            text: '',
                            tooltip: 'Восстановить'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                //this.up('#winAddVodomer').close();
                                var form = button.findParentByType('form').getForm();
                                //form.reset();
                                var zadol = form.findField('zadol').getValue();
                                var tarif = form.findField('tarif_gkal').getValue();

                                var gkal = form.findField('gkal').getValue();
                                var gkal_mop = form.findField('gkal_mop').getValue();
                                var square = form.findField('square').getValue();
                                var square_lg = form.findField('square_lg').getValue();
                                var perer = form.findField('perer').getValue();
                                var budjet = form.findField('budjet').getValue();
                                var budjet_mop = form.findField('budjet_mop').getValue();
                                var pbudjet = form.findField('pbudjet').getValue();
                                var oplacheno = form.findField('oplacheno').getValue();

                                var gkm2_mop =0;
                                var gkm2 = 0;
                                var otoplenie = 0;
                                var mop = 0;
                                var nacisleno = 0;



                                otoplenie = gkal * tarif - budjet ;
                                mop = gkal_mop * tarif - budjet_mop;
                                gkm2 = gkal / square;
                                gkm2_mop = gkal_mop / square;
                                nachisleno =otoplenie + mop + perer - pbudjet ;
                                form.findField('gkm2').setValue(gkm2);
                                form.findField('gkm2_mop').setValue(gkm2_mop);
                                form.findField('otoplenie').setValue(otoplenie);
                                form.findField('mop').setValue(mop);
                                form.findField('nachisleno').setValue(nachisleno);
                                form.findField('dolg').setValue(zadol + nachisleno - oplacheno);



                            },
                            x: 625,
                            y: 155,
                            formBind: true,
                            height: 30,
                            id: 'btnOtoplenieAppPerer',
                            width: 30,
                            icon: 'resources/css/images/ico/schet.png',
                            scale: 'medium',
                            text: '',
                            tooltip: 'Просчитать'
                        },
                        {
                            xtype: 'textfield',
                            x: 570,
                            y: 255,
                            style: 'background-color: #DCDCDC;',
                            width: 505,
                            fieldLabel: 'инфо перер',
                            name: 'info'
                        },
                        {
                            xtype: 'button',
                            x: 580,
                            y: 155,
                            id: 'printRaspechatakaTeplo',
                            icon: 'resources/css/images/ico/printer24.png',
                            scale: 'medium',
                            text: '',
                            tooltip: 'Печать расчетного листка',
                            tooltipType: 'title'
                        }
                    ]
                },
                {
                    xtype: 'form',
                    id: 'tabFmAppTbo',
                    layout: 'absolute',
                    title: 'ТБО',
                    items: [
                        {
                            xtype: 'gridpanel',
                            x: 0,
                            y: 0,
                            height: 500,
                            id: 'grNachTbo',
                            scrollable: true,
                            width: 220,
                            title: 'Период начисления',
                            store: 'StTekNachApp',
                            viewConfig: {
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 80,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'месяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 75,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'Долг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var values =stUser.getAt(0);
                                        var form = tool.findParentByType('form');

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AddAddressNachislTbo'
                                        };

                                        //Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(params,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'TboApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        if(results.success === "1"){
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                        }else{
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                            Ext.MessageBox.show({title: 'Ввод данных',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    tooltip: 'добавить запись',
                                    type: 'plus'
                                },
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'TboAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'search'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 235,
                            y: 250,
                            height: 250,
                            id: 'grLgotaNachTbo',
                            scrollable: true,
                            width: 840,
                            title: 'начисление на бюджет',
                            store: 'StLgotaNachVoda',
                            viewConfig: {
                                emptyText: 'Начислений по льготе нет'
                            },
                            columns: [
                                {
                                    xtype: 'actioncolumn',
                                    maxWidth: 25,
                                    minWidth: 25,
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var pr = r.get('pr');
                                                if (pr === 0 ) {
                                                    metaData = 'x-grid-center-icon';
                                                } else if (pr === 1   ){
                                                    metaData = 'x-hide-display';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;
                                                var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                                rbgTypeNachVoda.hide();
                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'addLgotaTboPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/add.png',
                                            tooltip: 'Добавить перерасчет по льготе'
                                        },
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');

                                                if (pr === 0 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ((pr === 1) && (check_date === tek_date) ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppTbo');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaTboPerer"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachTbo');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете перерасчет по тбо на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по тбо на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'TboApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по тбо на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/delete.png',
                                            tooltip: 'Удалить перерасчет по льготе'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'sdata',
                                    menuDisabled: true,
                                    text: 'дата с',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'fdata',
                                    menuDisabled: true,
                                    text: 'дата по',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 120,
                                    dataIndex: 'fio',
                                    menuDisabled: true,
                                    text: 'Ф.И.О'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 144,
                                    dataIndex: 'lgota',
                                    menuDisabled: true,
                                    text: 'Льгота',
                                    tooltip: 'name'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 35,
                                    align: 'center',
                                    dataIndex: 'percent',
                                    menuDisabled: true,
                                    text: '%',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 72,
                                    align: 'right',
                                    dataIndex: 'tarif',
                                    menuDisabled: true,
                                    text: 'тариф',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 57,
                                    align: 'center',
                                    dataIndex: 'people',
                                    menuDisabled: true,
                                    text: 'чел',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 61,
                                    align: 'right',
                                    dataIndex: 'qty',
                                    menuDisabled: true,
                                    text: 'куб',
                                    format: '0.0000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 74,
                                    align: 'right',
                                    dataIndex: 'budjet',
                                    menuDisabled: true,
                                    text: 'бюджет'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 40,
                                    dataIndex: 'pr',
                                    menuDisabled: true,
                                    text: 'пр',
                                    format: '0'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'editLgotaTbo'});
                                                stUser.sync();

                                                form.down('#btAddLgotaPerer').setText('Обновить запись');
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/edit.png',
                                            tooltip: 'Редактировать запись'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');
                                                if (pr === 1 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ( (pr === 0)   ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppTbo');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaTbo"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachTbo');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'TboApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/no.png',
                                            tooltip: 'Удалить  запись '
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'info',
                                    menuDisabled: true,
                                    text: 'инфо',
                                    tooltip: 'name'
                                }
                            ],
                            features: [
                                {
                                    ftype: 'summary'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                        var gridNachisl = Ext.getCmp('grNachTbo');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                        var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                        var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);

                                        //console.log(valueNachisl.index);
                                        if (value !==undefined && valueNachisl !==undefined ){
                                            var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                            var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                            var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                            var dt = new Date();
                                            var dt_nach = new Date(valueNachisl.get('data'));
                                            var check_date = Ext.Date.format(dt, 'Y-m');
                                            var date_check = Ext.Date.format(dt_nach, 'Y-m');
                                            form.getForm().findField('m2').hide();
                                            form.getForm().findField('gkm2').hide();
                                            rbgTypeNachVoda.hide();
                                            winAddLgotaPerer.setTitle('Добавление записи на бюджет');

                                            var pr = form.getForm().findField('checkType').getValue();
                                            //console.log(pr);

                                            if (pr === true ) {
                                                values.set({'vibor':'addLgotaTbo'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('people_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("0");
                                                form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            } else {

                                                values.set({'vibor':'addLgotaTboPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('people_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("1");
                                                form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            }


                                        } else{
                                            Ext.MessageBox.show({
                                                title: 'Добавлениезаписи начисления  на бюджет',
                                                msg: 'Не выбран льготчик',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        }
                                    },
                                    tooltip: 'добавить начисление по льготнику',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldcontainer',
                            x: 390,
                            y: 10,
                            height: 235,
                            style: 'background-color: #DCDCDC;',
                            width: 675,
                            layout: 'absolute',
                            fieldLabel: 'Начислено ,грн',
                            labelAlign: 'top',
                            items: [
                                {
                                    xtype: 'fieldset',
                                    x: 315,
                                    y: -11,
                                    height: 120,
                                    style: 'background-color: #F1EEEE ;',
                                    width: 140,
                                    title: 'Бюджет',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Льготн',
                                            labelWidth: 45,
                                            name: 'people_lg',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Льгота',
                                            labelWidth: 45,
                                            name: 'budjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Перер',
                                            labelWidth: 45,
                                            name: 'pbudjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'button',
                                    x: 585,
                                    y: 90,
                                    id: 'printRaspechatakaTbo',
                                    icon: 'resources/css/images/ico/printer24.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Печать расчетного листка',
                                    tooltipType: 'title'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 10,
                                    y: 130,
                                    width: 635,
                                    fieldLabel: 'инфо перер',
                                    name: 'info'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 10,
                                    y: 165,
                                    width: 635,
                                    fieldLabel: 'инфо бюджет',
                                    name: 'msq_lgota'
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 5,
                                    width: 125,
                                    fieldLabel: 'тариф',
                                    labelWidth: 55,
                                    name: 'tarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 85,
                                    width: 130,
                                    fieldLabel: 'Тар пер',
                                    labelWidth: 60,
                                    name: 'ptarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 180,
                                    y: 5,
                                    width: 115,
                                    fieldLabel: 'тбо',
                                    labelWidth: 40,
                                    name: 'tbo',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 150,
                                    y: 45,
                                    width: 140,
                                    fieldLabel: 'Перерасч',
                                    labelWidth: 70,
                                    name: 'perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 150,
                                    y: 85,
                                    width: 140,
                                    fieldLabel: 'Начислено',
                                    labelWidth: 70,
                                    name: 'nachisleno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 475,
                                    y: 0,
                                    width: 140,
                                    fieldLabel: 'Оплачено',
                                    labelWidth: 70,
                                    name: 'oplacheno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 475,
                                    y: 30,
                                    width: 140,
                                    fieldLabel: 'в т.ч субс',
                                    labelWidth: 70,
                                    name: 'subsidia',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 475,
                                    y: 55,
                                    width: 140,
                                    fieldLabel: 'в т.ч льг',
                                    labelWidth: 70,
                                    name: 'lg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 45,
                                    width: 125,
                                    fieldLabel: 'Человек',
                                    labelWidth: 55,
                                    name: 'people',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        //this.up('#winAddVodomer').close();
                                        var form = button.findParentByType('form').getForm();
                                        //form.reset();
                                        var zadol = form.findField('zadol').getValue();
                                        var tarif = form.findField('tarif').getValue();
                                        var people = form.findField('people').getValue();
                                        var perer = form.findField('perer').getValue();
                                        var budjet = form.findField('budjet').getValue();
                                        var pbudjet = form.findField('pbudjet').getValue();
                                        var people_lg = form.findField('people_lg').getValue();
                                        var oplacheno = form.findField('oplacheno').getValue();

                                        var nachisleno =0;
                                        var tbo = 0;

                                        if ((tarif===0)  &&  people > 0 ) {

                                            Ext.MessageBox.show({
                                                title: 'Проверка тарифа',
                                                msg: 'Введите тариф по услуге',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        } else {
                                            tbo = people * tarif - budjet;
                                            nachisleno =tbo +  perer;
                                            form.findField('tbo').setValue(tbo);
                                            form.findField('nachisleno').setValue(nachisleno);
                                            form.findField('dolg').setValue(zadol + nachisleno - oplacheno);

                                        }
                                    },
                                    x: 530,
                                    y: 90,
                                    formBind: true,
                                    id: 'btnTboAppPerer',
                                    width: 30,
                                    icon: 'resources/css/images/ico/schet.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Просчитать'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var grNach = Ext.getCmp('grNachTbo');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        grNach.getView().getSelectionModel().clearSelections();
                                        grNach.getView().getSelectionModel().select(ind);
                                    },
                                    x: 475,
                                    y: 90,
                                    formBind: true,
                                    id: 'btnTboAppReset',
                                    width: 30,
                                    icon: 'resources/css/images/ico/refresh.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Восстановить'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 230,
                            y: 65,
                            height: 150,
                            style: 'background-color: #DCDCDC;',
                            width: 145,
                            title: '',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на начало',
                                    labelAlign: 'top',
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на конец',
                                    labelAlign: 'top',
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppTboIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachTbo');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);

                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'TboApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);

                                                    }else{
                                                        form.reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    id: 'btnTboAppIns',
                                    width: 100,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записать'
                                }
                            ]
                        },
                        {
                            xtype: 'datefield',
                            x: 230,
                            y: 10,
                            border: '0px',
                            margin: '10 0 10 0',
                            width: 150,
                            fieldLabel: 'Период начислен',
                            hideLabel: true,
                            labelAlign: 'top',
                            labelWidth: 50,
                            name: 'data',
                            fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                            hideTrigger: true,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd'
                        }
                    ]
                },
                {
                    xtype: 'form',
                    id: 'tabFmAppVaxta',
                    width: 1096,
                    layout: 'absolute',
                    title: 'Вахта',
                    items: [
                        {
                            xtype: 'gridpanel',
                            x: 0,
                            y: 0,
                            height: 500,
                            id: 'grNachVaxta',
                            scrollable: true,
                            width: 220,
                            title: 'Период начисления',
                            store: 'StTekNachApp',
                            viewConfig: {
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 80,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'месяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 75,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'Долг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var values =stUser.getAt(0);
                                        var form = tool.findParentByType('form');

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AddAddressNachislVaxta'
                                        };

                                        //Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(params,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'VaxtaApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        if(results.success === "1"){
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                        }else{
                                                            form.getForm().reset();
                                                            form.getForm().loadRecord(records[0]);
                                                            Ext.MessageBox.show({title: 'Ввод данных',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    tooltip: 'добавить запись',
                                    type: 'plus'
                                },
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'VaxtaAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'search'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldcontainer',
                            x: 390,
                            y: 10,
                            height: 210,
                            style: 'background-color: #DCDCDC;',
                            width: 510,
                            layout: 'absolute',
                            fieldLabel: 'Начислено ,грн',
                            labelAlign: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    x: 430,
                                    y: 85,
                                    id: 'printRaspechatakaVaxta',
                                    icon: 'resources/css/images/ico/printer24.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Печать расчетного листка',
                                    tooltipType: 'title'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 10,
                                    y: 130,
                                    width: 475,
                                    fieldLabel: 'инфо перер',
                                    name: 'info'
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 5,
                                    width: 125,
                                    fieldLabel: 'тариф',
                                    labelWidth: 55,
                                    name: 'tarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 155,
                                    y: 45,
                                    width: 130,
                                    fieldLabel: 'Тар пер',
                                    labelWidth: 60,
                                    name: 'ptarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 170,
                                    y: 5,
                                    width: 115,
                                    fieldLabel: 'Вахта',
                                    labelWidth: 40,
                                    name: 'vaxta',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 145,
                                    y: 85,
                                    width: 140,
                                    fieldLabel: 'Перерасч',
                                    labelWidth: 70,
                                    name: 'perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 325,
                                    y: 5,
                                    width: 140,
                                    fieldLabel: 'Начислено',
                                    labelWidth: 70,
                                    name: 'nachisleno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 325,
                                    y: 40,
                                    width: 140,
                                    fieldLabel: 'Оплачено',
                                    labelWidth: 70,
                                    name: 'oplacheno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 45,
                                    width: 125,
                                    fieldLabel: 'Человек',
                                    labelWidth: 55,
                                    name: 'people',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 85,
                                    width: 125,
                                    fieldLabel: 'S  (м&sup2;)',
                                    labelWidth: 55,
                                    name: 'square',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        //this.up('#winAddVodomer').close();
                                        var form = button.findParentByType('form').getForm();
                                        //form.reset();
                                        var zadol = form.findField('zadol').getValue();
                                        var tarif = form.findField('tarif').getValue();
                                        var people = form.findField('people').getValue();
                                        var square = form.findField('square').getValue();
                                        var perer = form.findField('perer').getValue();
                                        var oplacheno = form.findField('oplacheno').getValue();

                                        var nachisleno =0;
                                        var vaxta = 0;

                                        vaxta = square * tarif ;
                                        nachisleno =vaxta +  perer;
                                        form.findField('vaxta').setValue(vaxta);
                                        form.findField('nachisleno').setValue(nachisleno);
                                        form.findField('dolg').setValue(zadol + nachisleno - oplacheno);


                                    },
                                    x: 375,
                                    y: 85,
                                    formBind: true,
                                    id: 'btnVaxtaAppPerer',
                                    width: 30,
                                    icon: 'resources/css/images/ico/schet.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Просчитать'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var grNach = Ext.getCmp('grNachVaxta');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        grNach.getView().getSelectionModel().clearSelections();
                                        grNach.getView().getSelectionModel().select(ind);
                                    },
                                    x: 325,
                                    y: 85,
                                    formBind: true,
                                    id: 'btnVaxtaAppReset',
                                    width: 30,
                                    icon: 'resources/css/images/ico/refresh.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Восстановить'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 230,
                            y: 65,
                            height: 150,
                            style: 'background-color: #DCDCDC;',
                            width: 145,
                            title: '',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на начало',
                                    labelAlign: 'top',
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на конец',
                                    labelAlign: 'top',
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppVaxtaIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachVaxta');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);

                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'VaxtaApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);

                                                    }else{
                                                        form.reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    id: 'btnVaxtaAppIns',
                                    width: 100,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записать'
                                }
                            ]
                        },
                        {
                            xtype: 'datefield',
                            x: 230,
                            y: 10,
                            border: '0px',
                            margin: '10 0 10 0',
                            width: 150,
                            fieldLabel: 'Период начислен',
                            hideLabel: true,
                            labelAlign: 'top',
                            labelWidth: 50,
                            name: 'data',
                            fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                            hideTrigger: true,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd'
                        }
                    ]
                }
            ]
        }
    ],

    onCheckboxfieldChange4: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Да");
        }else{
            field.setBoxLabel("Нет");
        }
    },

    onCheckboxfieldChange: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Да");
        }else{
            field.setBoxLabel("Нет");
        }
    },

    onCheckboxfieldChange1: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Да");
        }else{
            field.setBoxLabel("Нет");
        }
    },

    onCheckboxfieldChange2: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Да");
        }else{
            field.setBoxLabel("Нет");
        }
    },

    onCheckboxfieldChange3: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Да");
        }else{
            field.setBoxLabel("Нет");
        }
    },

    onDatefieldSelect: function(field, value, eOpts) {

    }

});